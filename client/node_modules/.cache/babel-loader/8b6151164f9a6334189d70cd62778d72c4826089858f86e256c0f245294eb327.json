{"ast":null,"code":"import _regeneratorRuntime from \"D:/Andrew/Documents/GitHub/SpotifyApp/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/Andrew/Documents/GitHub/SpotifyApp/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"D:/Andrew/Documents/GitHub/SpotifyApp/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _createClass from \"D:/Andrew/Documents/GitHub/SpotifyApp/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"D:/Andrew/Documents/GitHub/SpotifyApp/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"D:/Andrew/Documents/GitHub/SpotifyApp/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Andrew/Documents/GitHub/SpotifyApp/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"D:/Andrew/Documents/GitHub/SpotifyApp/client/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport _slicedToArray from \"D:/Andrew/Documents/GitHub/SpotifyApp/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toArray from \"D:/Andrew/Documents/GitHub/SpotifyApp/client/node_modules/@babel/runtime/helpers/esm/toArray.js\";\nimport _createForOfIteratorHelper from \"D:/Andrew/Documents/GitHub/SpotifyApp/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"D:/Andrew/Documents/GitHub/SpotifyApp/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n/**\n * @remix-run/router v1.3.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nvar PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\n\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var _options = options,\n    _options$initialEntri = _options.initialEntries,\n    initialEntries = _options$initialEntri === void 0 ? [\"/\"] : _options$initialEntri,\n    initialIndex = _options.initialIndex,\n    _options$v5Compat = _options.v5Compat,\n    v5Compat = _options$v5Compat === void 0 ? false : _options$v5Compat;\n  var entries; // Declare so we can access from createMemoryLocation\n\n  entries = initialEntries.map(function (entry, index) {\n    return createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined);\n  });\n  var index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  var action = Action.Pop;\n  var listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    var location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning$1(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  var history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref: createHref,\n    createURL: function createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation: function encodeLocation(to) {\n      var path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push: function push(to, state) {\n      action = Action.Push;\n      var nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action: action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace: function replace(to, state) {\n      action = Action.Replace;\n      var nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action: action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go: function go(delta) {\n      action = Action.Pop;\n      var nextIndex = clampIndex(index + delta);\n      var nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action: action,\n          location: nextLocation,\n          delta: delta\n        });\n      }\n    },\n    listen: function listen(fn) {\n      listener = fn;\n      return function () {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\n\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    var _window$location = window.location,\n      pathname = _window$location.pathname,\n      search = _window$location.search,\n      hash = _window$location.hash;\n    return createLocation(\"\", {\n      pathname: pathname,\n      search: search,\n      hash: hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\n\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    var _parsePath = parsePath(window.location.hash.substr(1)),\n      _parsePath$pathname = _parsePath.pathname,\n      pathname = _parsePath$pathname === void 0 ? \"/\" : _parsePath$pathname,\n      _parsePath$search = _parsePath.search,\n      search = _parsePath$search === void 0 ? \"\" : _parsePath$search,\n      _parsePath$hash = _parsePath.hash,\n      hash = _parsePath$hash === void 0 ? \"\" : _parsePath$hash;\n    return createLocation(\"\", {\n      pathname: pathname,\n      search: search,\n      hash: hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    var base = window.document.querySelector(\"base\");\n    var href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      var url = window.location.href;\n      var hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning$1(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning$1(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\n\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\n\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  var location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state: state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\n\nfunction createPath(_ref) {\n  var _ref$pathname = _ref.pathname,\n    pathname = _ref$pathname === void 0 ? \"/\" : _ref$pathname,\n    _ref$search = _ref.search,\n    search = _ref$search === void 0 ? \"\" : _ref$search,\n    _ref$hash = _ref.hash,\n    hash = _ref$hash === void 0 ? \"\" : _ref$hash;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\n\nfunction parsePath(path) {\n  var parsedPath = {};\n  if (path) {\n    var hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    var searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, _createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var _options2 = options,\n    _options2$window = _options2.window,\n    window = _options2$window === void 0 ? document.defaultView : _options2$window,\n    _options2$v5Compat = _options2.v5Compat,\n    v5Compat = _options2$v5Compat === void 0 ? false : _options2$v5Compat;\n  var globalHistory = window.history;\n  var action = Action.Pop;\n  var listener = null;\n  var index = getIndex(); // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    var state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    var nextIndex = getIndex();\n    var delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action: action,\n        location: history.location,\n        delta: delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    var location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    var historyState = getHistoryState(location, index);\n    var url = history.createHref(location); // try...catch because iOS limits us to 100 pushState calls :/\n\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action: action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    var location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    var historyState = getHistoryState(location, index);\n    var url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action: action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    var base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    var href = typeof to === \"string\" ? to : createPath(to);\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  var history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen: function listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return function () {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref: function createHref(to) {\n      return _createHref(window, to);\n    },\n    createURL: createURL,\n    encodeLocation: function encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      var url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push: push,\n    replace: replace,\n    go: function go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n} //#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nfunction isIndexRoute(route) {\n  return route.index === true;\n} // Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\n\nfunction convertRoutesToDataRoutes(routes, parentPath, allIds) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (allIds === void 0) {\n    allIds = new Set();\n  }\n  return routes.map(function (route, index) {\n    var treePath = [].concat(_toConsumableArray(parentPath), [index]);\n    var id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!allIds.has(id), \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    allIds.add(id);\n    if (isIndexRoute(route)) {\n      var indexRoute = _extends({}, route, {\n        id: id\n      });\n      return indexRoute;\n    } else {\n      var pathOrLayoutRoute = _extends({}, route, {\n        id: id,\n        children: route.children ? convertRoutesToDataRoutes(route.children, treePath, allIds) : undefined\n      });\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\n\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  var location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  var pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  var branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  var matches = null;\n  for (var i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i],\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    safelyDecodeURI(pathname));\n  }\n  return matches;\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  var flattenRoute = function flattenRoute(route, index, relativePath) {\n    var meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route: route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    var path = joinPaths([parentPath, meta.relativePath]);\n    var routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    } // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path: path,\n      score: computeScore(path, route.index),\n      routesMeta: routesMeta\n    });\n  };\n  routes.forEach(function (route, index) {\n    var _route$path;\n\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      var _iterator = _createForOfIteratorHelper(explodeOptionalSegments(route.path)),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var exploded = _step.value;\n          flattenRoute(route, index, exploded);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\n\nfunction explodeOptionalSegments(path) {\n  var segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  var _segments = _toArray(segments),\n    first = _segments[0],\n    rest = _segments.slice(1); // Optional path segments are denoted by a trailing `?`\n\n  var isOptional = first.endsWith(\"?\"); // Compute the corresponding required segment: `foo?` -> `foo`\n\n  var required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  var restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  var result = []; // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n\n  result.push.apply(result, _toConsumableArray(restExploded.map(function (subpath) {\n    return subpath === \"\" ? required : [required, subpath].join(\"/\");\n  }))); // Then if this is an optional value, add all child versions without\n\n  if (isOptional) {\n    result.push.apply(result, _toConsumableArray(restExploded));\n  } // for absolute paths, ensure `/` instead of empty segment\n\n  return result.map(function (exploded) {\n    return path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded;\n  });\n}\nfunction rankRouteBranches(branches) {\n  branches.sort(function (a, b) {\n    return a.score !== b.score ? b.score - a.score // Higher score first\n    : compareIndexes(a.routesMeta.map(function (meta) {\n      return meta.childrenIndex;\n    }), b.routesMeta.map(function (meta) {\n      return meta.childrenIndex;\n    }));\n  });\n}\nvar paramRe = /^:\\w+$/;\nvar dynamicSegmentValue = 3;\nvar indexRouteValue = 2;\nvar emptySegmentValue = 1;\nvar staticSegmentValue = 10;\nvar splatPenalty = -2;\nvar isSplat = function isSplat(s) {\n  return s === \"*\";\n};\nfunction computeScore(path, index) {\n  var segments = path.split(\"/\");\n  var initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(function (s) {\n    return !isSplat(s);\n  }).reduce(function (score, segment) {\n    return score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue);\n  }, initialScore);\n}\nfunction compareIndexes(a, b) {\n  var siblings = a.length === b.length && a.slice(0, -1).every(function (n, i) {\n    return n === b[i];\n  });\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname) {\n  var routesMeta = branch.routesMeta;\n  var matchedParams = {};\n  var matchedPathname = \"/\";\n  var matches = [];\n  for (var i = 0; i < routesMeta.length; ++i) {\n    var meta = routesMeta[i];\n    var end = i === routesMeta.length - 1;\n    var remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    var match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end: end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    var route = meta.route;\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route: route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\n\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  var path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  return path.replace(/^:(\\w+)(\\??)/g, function (_, key, optional) {\n    var param = params[key];\n    if (optional === \"?\") {\n      return param == null ? \"\" : param;\n    }\n    if (param == null) {\n      invariant(false, \"Missing \\\":\" + key + \"\\\" param\");\n    }\n    return param;\n  }).replace(/\\/:(\\w+)(\\??)/g, function (_, key, optional) {\n    var param = params[key];\n    if (optional === \"?\") {\n      return param == null ? \"\" : \"/\" + param;\n    }\n    if (param == null) {\n      invariant(false, \"Missing \\\":\" + key + \"\\\" param\");\n    }\n    return \"/\" + param;\n  }) // Remove any optional markers from optional static segments\n  .replace(/\\?/g, \"\").replace(/(\\/?)\\*/, function (_, prefix, __, str) {\n    var star = \"*\";\n    if (params[star] == null) {\n      // If no splat was provided, trim the trailing slash _unless_ it's\n      // the entire path\n      return str === \"/*\" ? \"/\" : \"\";\n    } // Apply the splat\n\n    return \"\" + prefix + params[star];\n  });\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\n\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  var _compilePath = compilePath(pattern.path, pattern.caseSensitive, pattern.end),\n    _compilePath2 = _slicedToArray(_compilePath, 2),\n    matcher = _compilePath2[0],\n    paramNames = _compilePath2[1];\n  var match = pathname.match(matcher);\n  if (!match) return null;\n  var matchedPathname = match[0];\n  var pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  var captureGroups = match.slice(1);\n  var params = paramNames.reduce(function (memo, paramName, index) {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      var splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params: params,\n    pathname: matchedPathname,\n    pathnameBase: pathnameBase,\n    pattern: pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  var paramNames = [];\n  var regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:(\\w+)/g, function (_, paramName) {\n    paramNames.push(paramName);\n    return \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  var matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\nfunction safelyDecodeURI(value) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\n\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  } // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n\n  var startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  var nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * @private\n */\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging @remix-run/router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\n\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  var _ref3 = typeof to === \"string\" ? parsePath(to) : to,\n    toPathname = _ref3.pathname,\n    _ref3$search = _ref3.search,\n    search = _ref3$search === void 0 ? \"\" : _ref3$search,\n    _ref3$hash = _ref3.hash,\n    hash = _ref3$hash === void 0 ? \"\" : _ref3$hash;\n  var pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname: pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  var segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  var relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(function (segment) {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\n\nfunction getPathContributingMatches(matches) {\n  return matches.filter(function (match, index) {\n    return index === 0 || match.route.path && match.route.path.length > 0;\n  });\n}\n/**\n * @private\n */\n\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  var to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  var isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  var toPathname = isEmptyPath ? \"/\" : to.pathname;\n  var from; // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    var routePathnameIndex = routePathnames.length - 1;\n    if (toPathname.startsWith(\"..\")) {\n      var toSegments = toPathname.split(\"/\"); // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    } // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  var path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original \"to\" had one\n\n  var hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\"); // Or if this was a link to the current path which has a trailing slash\n\n  var hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\n\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\n\nvar joinPaths = function joinPaths(paths) {\n  return paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n};\n/**\n * @private\n */\n\nvar normalizePathname = function normalizePathname(pathname) {\n  return pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n};\n/**\n * @private\n */\n\nvar normalizeSearch = function normalizeSearch(search) {\n  return !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n};\n/**\n * @private\n */\n\nvar normalizeHash = function normalizeHash(hash) {\n  return !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n};\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\n\nvar json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  var responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  var headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers: headers\n  }));\n};\nvar AbortedDeferredError = /*#__PURE__*/function (_Error) {\n  _inherits(AbortedDeferredError, _Error);\n  var _super = _createSuper(AbortedDeferredError);\n  function AbortedDeferredError() {\n    _classCallCheck(this, AbortedDeferredError);\n    return _super.apply(this, arguments);\n  }\n  return _createClass(AbortedDeferredError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nvar DeferredData = /*#__PURE__*/function () {\n  function DeferredData(data, responseInit) {\n    var _this = this;\n    _classCallCheck(this, DeferredData);\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\"); // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n\n    var reject;\n    this.abortPromise = new Promise(function (_, r) {\n      return reject = r;\n    });\n    this.controller = new AbortController();\n    var onAbort = function onAbort() {\n      return reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    };\n    this.unlistenAbortSignal = function () {\n      return _this.controller.signal.removeEventListener(\"abort\", onAbort);\n    };\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce(function (acc, _ref) {\n      var _ref4 = _slicedToArray(_ref, 2),\n        key = _ref4[0],\n        value = _ref4[1];\n      return Object.assign(acc, _defineProperty({}, key, _this.trackPromise(key, value)));\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  _createClass(DeferredData, [{\n    key: \"trackPromise\",\n    value: function trackPromise(key, value) {\n      var _this2 = this;\n      if (!(value instanceof Promise)) {\n        return value;\n      }\n      this.deferredKeys.push(key);\n      this.pendingKeysSet.add(key); // We store a little wrapper promise that will be extended with\n      // _data/_error props upon resolve/reject\n\n      var promise = Promise.race([value, this.abortPromise]).then(function (data) {\n        return _this2.onSettle(promise, key, null, data);\n      }, function (error) {\n        return _this2.onSettle(promise, key, error);\n      }); // Register rejection listeners to avoid uncaught promise rejections on\n      // errors or aborted deferred values\n\n      promise.catch(function () {});\n      Object.defineProperty(promise, \"_tracked\", {\n        get: function get() {\n          return true;\n        }\n      });\n      return promise;\n    }\n  }, {\n    key: \"onSettle\",\n    value: function onSettle(promise, key, error, data) {\n      if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n        this.unlistenAbortSignal();\n        Object.defineProperty(promise, \"_error\", {\n          get: function get() {\n            return error;\n          }\n        });\n        return Promise.reject(error);\n      }\n      this.pendingKeysSet.delete(key);\n      if (this.done) {\n        // Nothing left to abort!\n        this.unlistenAbortSignal();\n      }\n      if (error) {\n        Object.defineProperty(promise, \"_error\", {\n          get: function get() {\n            return error;\n          }\n        });\n        this.emit(false, key);\n        return Promise.reject(error);\n      }\n      Object.defineProperty(promise, \"_data\", {\n        get: function get() {\n          return data;\n        }\n      });\n      this.emit(false, key);\n      return data;\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(aborted, settledKey) {\n      this.subscribers.forEach(function (subscriber) {\n        return subscriber(aborted, settledKey);\n      });\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(fn) {\n      var _this3 = this;\n      this.subscribers.add(fn);\n      return function () {\n        return _this3.subscribers.delete(fn);\n      };\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      var _this4 = this;\n      this.controller.abort();\n      this.pendingKeysSet.forEach(function (v, k) {\n        return _this4.pendingKeysSet.delete(k);\n      });\n      this.emit(true);\n    }\n  }, {\n    key: \"resolveData\",\n    value: function () {\n      var _resolveData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(signal) {\n        var _this5 = this;\n        var aborted, onAbort;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              aborted = false;\n              if (this.done) {\n                _context.next = 7;\n                break;\n              }\n              onAbort = function onAbort() {\n                return _this5.cancel();\n              };\n              signal.addEventListener(\"abort\", onAbort);\n              _context.next = 6;\n              return new Promise(function (resolve) {\n                _this5.subscribe(function (aborted) {\n                  signal.removeEventListener(\"abort\", onAbort);\n                  if (aborted || _this5.done) {\n                    resolve(aborted);\n                  }\n                });\n              });\n            case 6:\n              aborted = _context.sent;\n            case 7:\n              return _context.abrupt(\"return\", aborted);\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function resolveData(_x) {\n        return _resolveData.apply(this, arguments);\n      }\n      return resolveData;\n    }()\n  }, {\n    key: \"done\",\n    get: function get() {\n      return this.pendingKeysSet.size === 0;\n    }\n  }, {\n    key: \"unwrappedData\",\n    get: function get() {\n      invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n      return Object.entries(this.data).reduce(function (acc, _ref2) {\n        var _ref5 = _slicedToArray(_ref2, 2),\n          key = _ref5[0],\n          value = _ref5[1];\n        return Object.assign(acc, _defineProperty({}, key, unwrapTrackedPromise(value)));\n      }, {});\n    }\n  }, {\n    key: \"pendingKeys\",\n    get: function get() {\n      return Array.from(this.pendingKeysSet);\n    }\n  }]);\n  return DeferredData;\n}();\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\nvar defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  var responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\n\nvar redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  var responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  var headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers: headers\n  }));\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nvar ErrorResponse = /*#__PURE__*/_createClass(function ErrorResponse(status, statusText, data, internal) {\n  _classCallCheck(this, ErrorResponse);\n  if (internal === void 0) {\n    internal = false;\n  }\n  this.status = status;\n  this.statusText = statusText || \"\";\n  this.internal = internal;\n  if (data instanceof Error) {\n    this.data = data.toString();\n    this.error = data;\n  } else {\n    this.data = data;\n  }\n});\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\nvar validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nvar validMutationMethods = new Set(validMutationMethodsArr);\nvar validRequestMethodsArr = [\"get\"].concat(validMutationMethodsArr);\nvar validRequestMethods = new Set(validRequestMethodsArr);\nvar redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nvar redirectPreserveMethodStatusCodes = new Set([307, 308]);\nvar IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined\n};\nvar IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined\n};\nvar IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nvar isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nvar isServer = !isBrowser; //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\n\nfunction createRouter(init) {\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  var dataRoutes = convertRoutesToDataRoutes(init.routes); // Cleanup function for history\n\n  var unlistenHistory = null; // Externally-provided functions to call on all state changes\n\n  var subscribers = new Set(); // Externally-provided object to hold scroll restoration locations during routing\n\n  var savedScrollPositions = null; // Externally-provided function to get scroll restoration keys\n\n  var getScrollRestorationKey = null; // Externally-provided function to get current scroll position\n\n  var getScrollPosition = null; // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n\n  var initialScrollRestored = init.hydrationData != null;\n  var initialMatches = matchRoutes(dataRoutes, init.history.location, init.basename);\n  var initialErrors = null;\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    var error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    var _getShortCircuitMatch = getShortCircuitMatches(dataRoutes),\n      matches = _getShortCircuitMatch.matches,\n      route = _getShortCircuitMatch.route;\n    initialMatches = matches;\n    initialErrors = _defineProperty({}, route.id, error);\n  }\n  var initialized = !initialMatches.some(function (m) {\n    return m.route.loader;\n  }) || init.hydrationData != null;\n  var router;\n  var state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized: initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  }; // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n\n  var pendingAction = Action.Pop; // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n\n  var pendingPreventScrollReset = false; // AbortController for the active navigation\n\n  var pendingNavigationController; // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n\n  var isUninterruptedRevalidation = false; // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidate()\n  //  - X-Remix-Revalidate (from redirect)\n\n  var isRevalidationRequired = false; // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n\n  var cancelledDeferredRoutes = []; // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n\n  var cancelledFetcherLoads = []; // AbortControllers for any in-flight fetchers\n\n  var fetchControllers = new Map(); // Track loads based on the order in which they started\n\n  var incrementingLoadId = 0; // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n\n  var pendingNavigationLoadId = -1; // Fetchers that triggered data reloads as a result of their actions\n\n  var fetchReloadIds = new Map(); // Fetchers that triggered redirect navigations from their actions\n\n  var fetchRedirectIds = new Set(); // Most recent href/match for fetcher.load calls for fetchers\n\n  var fetchLoadMatches = new Map(); // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n\n  var activeDeferreds = new Map(); // We ony support a single active blocker at the moment since we don't have\n  // any compelling use cases for multi-blocker yet\n\n  var activeBlocker = null; // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n\n  var blockerFunctions = new Map(); // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n\n  var ignoreNextHistoryUpdate = false; // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(function (_ref) {\n      var historyAction = _ref.action,\n        location = _ref.location,\n        delta = _ref.delta;\n\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (ignoreNextHistoryUpdate) {\n        ignoreNextHistoryUpdate = false;\n        return;\n      }\n      warning(activeBlocker != null && delta === null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      var blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction: historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        ignoreNextHistoryUpdate = true;\n        init.history.go(delta * -1); // Put the blocker into a blocked state\n\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location: location,\n          proceed: function proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location: location\n            }); // Re-do the same POP navigation we just blocked\n\n            init.history.go(delta);\n          },\n          reset: function reset() {\n            deleteBlocker(blockerKey);\n            updateState({\n              blockers: new Map(router.state.blockers)\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    }); // Kick off initial data load if needed.  Use Pop to avoid modifying history\n\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location);\n    }\n    return router;\n  } // Clean up a router and it's side effects\n\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach(function (_, key) {\n      return deleteFetcher(key);\n    });\n    state.blockers.forEach(function (_, key) {\n      return deleteBlocker(key);\n    });\n  } // Subscribe to state updates for the router\n\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return function () {\n      return subscribers.delete(fn);\n    };\n  } // Update our state and notify the calling context of the change\n\n  function updateState(newState) {\n    state = _extends({}, state, newState);\n    subscribers.forEach(function (subscriber) {\n      return subscriber(state);\n    });\n  } // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n\n  function completeNavigation(location, newState) {\n    var _location$state, _location$state2;\n\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    var isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    var actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    } // Always preserve any existing loaderData from re-used routes\n\n    var loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData; // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    var _iterator2 = _createForOfIteratorHelper(blockerFunctions),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _step2$value = _slicedToArray(_step2.value, 1),\n          key = _step2$value[0];\n        deleteBlocker(key);\n      } // Always respect the user flag.  Otherwise don't reset on mutation\n      // submission navigations unless they redirect\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    var preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    updateState(_extends({}, newState, {\n      actionData: actionData,\n      loaderData: loaderData,\n      historyAction: pendingAction,\n      location: location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset: preventScrollReset,\n      blockers: new Map(state.blockers)\n    }));\n    if (isUninterruptedRevalidation) ;else if (pendingAction === Action.Pop) ;else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    } // Reset stateful navigation vars\n\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  } // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  function navigate(_x2, _x3) {\n    return _navigate.apply(this, arguments);\n  } // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function _navigate() {\n    _navigate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(to, opts) {\n      var _normalizeNavigateOpt2, path, submission, error, currentLocation, nextLocation, userReplace, historyAction, preventScrollReset, blockerKey;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(typeof to === \"number\")) {\n              _context2.next = 3;\n              break;\n            }\n            init.history.go(to);\n            return _context2.abrupt(\"return\");\n          case 3:\n            _normalizeNavigateOpt2 = normalizeNavigateOptions(to, opts), path = _normalizeNavigateOpt2.path, submission = _normalizeNavigateOpt2.submission, error = _normalizeNavigateOpt2.error;\n            currentLocation = state.location;\n            nextLocation = createLocation(state.location, path, opts && opts.state); // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n            // URL from window.location, so we need to encode it here so the behavior\n            // remains the same as POP and non-data-router usages.  new URL() does all\n            // the same encoding we'd get from a history.pushState/window.location read\n            // without having to touch history\n            nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n            userReplace = opts && opts.replace != null ? opts.replace : undefined;\n            historyAction = Action.Push;\n            if (userReplace === true) {\n              historyAction = Action.Replace;\n            } else if (userReplace === false) ;else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n              // By default on submissions to the current location we REPLACE so that\n              // users don't have to double-click the back button to get to the prior\n              // location.  If the user redirects to a different location from the\n              // action/loader this will be ignored and the redirect will be a PUSH\n              historyAction = Action.Replace;\n            }\n            preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n            blockerKey = shouldBlockNavigation({\n              currentLocation: currentLocation,\n              nextLocation: nextLocation,\n              historyAction: historyAction\n            });\n            if (!blockerKey) {\n              _context2.next = 15;\n              break;\n            }\n            // Put the blocker into a blocked state\n            updateBlocker(blockerKey, {\n              state: \"blocked\",\n              location: nextLocation,\n              proceed: function proceed() {\n                updateBlocker(blockerKey, {\n                  state: \"proceeding\",\n                  proceed: undefined,\n                  reset: undefined,\n                  location: nextLocation\n                }); // Send the same navigation through\n\n                navigate(to, opts);\n              },\n              reset: function reset() {\n                deleteBlocker(blockerKey);\n                updateState({\n                  blockers: new Map(state.blockers)\n                });\n              }\n            });\n            return _context2.abrupt(\"return\");\n          case 15:\n            _context2.next = 17;\n            return startNavigation(historyAction, nextLocation, {\n              submission: submission,\n              // Send through the formData serialization error if we have one so we can\n              // render at the right error boundary after we match routes\n              pendingError: error,\n              preventScrollReset: preventScrollReset,\n              replace: opts && opts.replace\n            });\n          case 17:\n            return _context2.abrupt(\"return\", _context2.sent);\n          case 18:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return _navigate.apply(this, arguments);\n  }\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    }); // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n\n    if (state.navigation.state === \"submitting\") {\n      return;\n    } // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    } // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  } // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  function startNavigation(_x4, _x5, _x6) {\n    return _startNavigation.apply(this, arguments);\n  } // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  function _startNavigation() {\n    _startNavigation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(historyAction, location, opts) {\n      var loadingNavigation, matches, _error, _getShortCircuitMatch2, notFoundMatches, _route, request, pendingActionData, pendingError, actionOutput, navigation, _yield$handleLoaders, shortCircuited, loaderData, errors;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            // Abort any in-progress navigations and start a new one. Unset any ongoing\n            // uninterrupted revalidations unless told otherwise, since we want this\n            // new navigation to update history normally\n            pendingNavigationController && pendingNavigationController.abort();\n            pendingNavigationController = null;\n            pendingAction = historyAction;\n            isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true; // Save the current scroll position every time we start a new navigation,\n            // and track whether we should reset scroll on completion\n\n            saveScrollPosition(state.location, state.matches);\n            pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n            loadingNavigation = opts && opts.overrideNavigation;\n            matches = matchRoutes(dataRoutes, location, init.basename); // Short circuit with a 404 on the root error boundary if we match nothing\n            if (matches) {\n              _context3.next = 14;\n              break;\n            }\n            _error = getInternalRouterError(404, {\n              pathname: location.pathname\n            });\n            _getShortCircuitMatch2 = getShortCircuitMatches(dataRoutes), notFoundMatches = _getShortCircuitMatch2.matches, _route = _getShortCircuitMatch2.route; // Cancel all pending deferred on 404s since we don't keep any routes\n            cancelActiveDeferreds();\n            completeNavigation(location, {\n              matches: notFoundMatches,\n              loaderData: {},\n              errors: _defineProperty({}, _route.id, _error)\n            });\n            return _context3.abrupt(\"return\");\n          case 14:\n            if (!(isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod)))) {\n              _context3.next = 17;\n              break;\n            }\n            completeNavigation(location, {\n              matches: matches\n            });\n            return _context3.abrupt(\"return\");\n          case 17:\n            // Create a controller/Request for this navigation\n\n            pendingNavigationController = new AbortController();\n            request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n            if (!(opts && opts.pendingError)) {\n              _context3.next = 23;\n              break;\n            }\n            // If we have a pendingError, it means the user attempted a GET submission\n            // with binary FormData so assign here and skip to handleLoaders.  That\n            // way we handle calling loaders above the boundary etc.  It's not really\n            // different from an actionError in that sense.\n            pendingError = _defineProperty({}, findNearestBoundary(matches).route.id, opts.pendingError);\n            _context3.next = 34;\n            break;\n          case 23:\n            if (!(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n              _context3.next = 34;\n              break;\n            }\n            _context3.next = 26;\n            return handleAction(request, location, opts.submission, matches, {\n              replace: opts.replace\n            });\n          case 26:\n            actionOutput = _context3.sent;\n            if (!actionOutput.shortCircuited) {\n              _context3.next = 29;\n              break;\n            }\n            return _context3.abrupt(\"return\");\n          case 29:\n            pendingActionData = actionOutput.pendingActionData;\n            pendingError = actionOutput.pendingActionError;\n            navigation = _extends({\n              state: \"loading\",\n              location: location\n            }, opts.submission);\n            loadingNavigation = navigation; // Create a GET request for the loaders\n\n            request = new Request(request.url, {\n              signal: request.signal\n            });\n          case 34:\n            _context3.next = 36;\n            return handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.replace, pendingActionData, pendingError);\n          case 36:\n            _yield$handleLoaders = _context3.sent;\n            shortCircuited = _yield$handleLoaders.shortCircuited;\n            loaderData = _yield$handleLoaders.loaderData;\n            errors = _yield$handleLoaders.errors;\n            if (!shortCircuited) {\n              _context3.next = 42;\n              break;\n            }\n            return _context3.abrupt(\"return\");\n          case 42:\n            // Clean up now that the action/loaders have completed.  Don't clean up if\n            // we short circuited because pendingNavigationController will have already\n            // been assigned to a new controller for the next navigation\n\n            pendingNavigationController = null;\n            completeNavigation(location, _extends({\n              matches: matches\n            }, pendingActionData ? {\n              actionData: pendingActionData\n            } : {}, {\n              loaderData: loaderData,\n              errors: errors\n            }));\n          case 44:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n    return _startNavigation.apply(this, arguments);\n  }\n  function handleAction(_x7, _x8, _x9, _x10, _x11) {\n    return _handleAction.apply(this, arguments);\n  } // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  function _handleAction() {\n    _handleAction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(request, location, submission, matches, opts) {\n      var navigation, result, actionMatch, replace, boundaryMatch;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            interruptActiveLoads(); // Put us in a submitting state\n            navigation = _extends({\n              state: \"submitting\",\n              location: location\n            }, submission);\n            updateState({\n              navigation: navigation\n            }); // Call our action and get the result\n            actionMatch = getTargetMatch(matches, location);\n            if (actionMatch.route.action) {\n              _context4.next = 8;\n              break;\n            }\n            result = {\n              type: ResultType.error,\n              error: getInternalRouterError(405, {\n                method: request.method,\n                pathname: location.pathname,\n                routeId: actionMatch.route.id\n              })\n            };\n            _context4.next = 13;\n            break;\n          case 8:\n            _context4.next = 10;\n            return callLoaderOrAction(\"action\", request, actionMatch, matches, router.basename);\n          case 10:\n            result = _context4.sent;\n            if (!request.signal.aborted) {\n              _context4.next = 13;\n              break;\n            }\n            return _context4.abrupt(\"return\", {\n              shortCircuited: true\n            });\n          case 13:\n            if (!isRedirectResult(result)) {\n              _context4.next = 18;\n              break;\n            }\n            if (opts && opts.replace != null) {\n              replace = opts.replace;\n            } else {\n              // If the user didn't explicity indicate replace behavior, replace if\n              // we redirected to the exact same location we're currently at to avoid\n              // double back-buttons\n              replace = result.location === state.location.pathname + state.location.search;\n            }\n            _context4.next = 17;\n            return startRedirectNavigation(state, result, {\n              submission: submission,\n              replace: replace\n            });\n          case 17:\n            return _context4.abrupt(\"return\", {\n              shortCircuited: true\n            });\n          case 18:\n            if (!isErrorResult(result)) {\n              _context4.next = 22;\n              break;\n            }\n            // Store off the pending error - we use it to determine which loaders\n            // to call and will commit it when we complete the navigation\n            boundaryMatch = findNearestBoundary(matches, actionMatch.route.id); // By default, all submissions are REPLACE navigations, but if the\n            // action threw an error that'll be rendered in an errorElement, we fall\n            // back to PUSH so that the user can use the back button to get back to\n            // the pre-submission form location to try again\n            if ((opts && opts.replace) !== true) {\n              pendingAction = Action.Push;\n            }\n            return _context4.abrupt(\"return\", {\n              // Send back an empty object we can use to clear out any prior actionData\n              pendingActionData: {},\n              pendingActionError: _defineProperty({}, boundaryMatch.route.id, result.error)\n            });\n          case 22:\n            if (!isDeferredResult(result)) {\n              _context4.next = 24;\n              break;\n            }\n            throw getInternalRouterError(400, {\n              type: \"defer-action\"\n            });\n          case 24:\n            return _context4.abrupt(\"return\", {\n              pendingActionData: _defineProperty({}, actionMatch.route.id, result.data)\n            });\n          case 25:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n    return _handleAction.apply(this, arguments);\n  }\n  function handleLoaders(_x12, _x13, _x14, _x15, _x16, _x17, _x18, _x19) {\n    return _handleLoaders.apply(this, arguments);\n  }\n  function _handleLoaders() {\n    _handleLoaders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(request, location, matches, overrideNavigation, submission, replace, pendingActionData, pendingError) {\n      var loadingNavigation, navigation, activeSubmission, _getMatchesToLoad, _getMatchesToLoad2, matchesToLoad, revalidatingFetchers, actionData, _yield$callLoadersAnd, results, loaderResults, fetcherResults, redirect, _processLoaderData, loaderData, errors, didAbortFetchLoads;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            // Figure out the right navigation we want to use for data loading\n            loadingNavigation = overrideNavigation;\n            if (!loadingNavigation) {\n              navigation = _extends({\n                state: \"loading\",\n                location: location,\n                formMethod: undefined,\n                formAction: undefined,\n                formEncType: undefined,\n                formData: undefined\n              }, submission);\n              loadingNavigation = navigation;\n            } // If this was a redirect from an action we don't have a \"submission\" but\n            // we have it on the loading navigation so use that if available\n            activeSubmission = submission ? submission : loadingNavigation.formMethod && loadingNavigation.formAction && loadingNavigation.formData && loadingNavigation.formEncType ? {\n              formMethod: loadingNavigation.formMethod,\n              formAction: loadingNavigation.formAction,\n              formData: loadingNavigation.formData,\n              formEncType: loadingNavigation.formEncType\n            } : undefined;\n            _getMatchesToLoad = getMatchesToLoad(init.history, state, matches, activeSubmission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, pendingActionData, pendingError, fetchLoadMatches), _getMatchesToLoad2 = _slicedToArray(_getMatchesToLoad, 2), matchesToLoad = _getMatchesToLoad2[0], revalidatingFetchers = _getMatchesToLoad2[1]; // Cancel pending deferreds for no-longer-matched routes or routes we're\n            // about to reload.  Note that if this is an action reload we would have\n            // already cancelled all pending deferreds so this would be a no-op\n            cancelActiveDeferreds(function (routeId) {\n              return !(matches && matches.some(function (m) {\n                return m.route.id === routeId;\n              })) || matchesToLoad && matchesToLoad.some(function (m) {\n                return m.route.id === routeId;\n              });\n            }); // Short circuit if we have no loaders to run\n            if (!(matchesToLoad.length === 0 && revalidatingFetchers.length === 0)) {\n              _context5.next = 8;\n              break;\n            }\n            completeNavigation(location, _extends({\n              matches: matches,\n              loaderData: {},\n              // Commit pending error if we're short circuiting\n              errors: pendingError || null\n            }, pendingActionData ? {\n              actionData: pendingActionData\n            } : {}));\n            return _context5.abrupt(\"return\", {\n              shortCircuited: true\n            });\n          case 8:\n            // If this is an uninterrupted revalidation, we remain in our current idle\n            // state.  If not, we need to switch to our loading state and load data,\n            // preserving any new action data or existing action data (in the case of\n            // a revalidation interrupting an actionReload)\n\n            if (!isUninterruptedRevalidation) {\n              revalidatingFetchers.forEach(function (rf) {\n                var fetcher = state.fetchers.get(rf.key);\n                var revalidatingFetcher = {\n                  state: \"loading\",\n                  data: fetcher && fetcher.data,\n                  formMethod: undefined,\n                  formAction: undefined,\n                  formEncType: undefined,\n                  formData: undefined,\n                  \" _hasFetcherDoneAnything \": true\n                };\n                state.fetchers.set(rf.key, revalidatingFetcher);\n              });\n              actionData = pendingActionData || state.actionData;\n              updateState(_extends({\n                navigation: loadingNavigation\n              }, actionData ? Object.keys(actionData).length === 0 ? {\n                actionData: null\n              } : {\n                actionData: actionData\n              } : {}, revalidatingFetchers.length > 0 ? {\n                fetchers: new Map(state.fetchers)\n              } : {}));\n            }\n            pendingNavigationLoadId = ++incrementingLoadId;\n            revalidatingFetchers.forEach(function (rf) {\n              return fetchControllers.set(rf.key, pendingNavigationController);\n            });\n            _context5.next = 13;\n            return callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);\n          case 13:\n            _yield$callLoadersAnd = _context5.sent;\n            results = _yield$callLoadersAnd.results;\n            loaderResults = _yield$callLoadersAnd.loaderResults;\n            fetcherResults = _yield$callLoadersAnd.fetcherResults;\n            if (!request.signal.aborted) {\n              _context5.next = 19;\n              break;\n            }\n            return _context5.abrupt(\"return\", {\n              shortCircuited: true\n            });\n          case 19:\n            // Clean up _after_ loaders have completed.  Don't clean up if we short\n            // circuited because fetchControllers would have been aborted and\n            // reassigned to new controllers for the next navigation\n\n            revalidatingFetchers.forEach(function (rf) {\n              return fetchControllers.delete(rf.key);\n            }); // If any loaders returned a redirect Response, start a new REPLACE navigation\n            redirect = findRedirect(results);\n            if (!redirect) {\n              _context5.next = 25;\n              break;\n            }\n            _context5.next = 24;\n            return startRedirectNavigation(state, redirect, {\n              replace: replace\n            });\n          case 24:\n            return _context5.abrupt(\"return\", {\n              shortCircuited: true\n            });\n          case 25:\n            // Process and commit output from loaders\n            _processLoaderData = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds), loaderData = _processLoaderData.loaderData, errors = _processLoaderData.errors; // Wire up subscribers to update loaderData as promises settle\n            activeDeferreds.forEach(function (deferredData, routeId) {\n              deferredData.subscribe(function (aborted) {\n                // Note: No need to updateState here since the TrackedPromise on\n                // loaderData is stable across resolve/reject\n                // Remove this instance if we were aborted or if promises have settled\n                if (aborted || deferredData.done) {\n                  activeDeferreds.delete(routeId);\n                }\n              });\n            });\n            markFetchRedirectsDone();\n            didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n            return _context5.abrupt(\"return\", _extends({\n              loaderData: loaderData,\n              errors: errors\n            }, didAbortFetchLoads || revalidatingFetchers.length > 0 ? {\n              fetchers: new Map(state.fetchers)\n            } : {}));\n          case 30:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }));\n    return _handleLoaders.apply(this, arguments);\n  }\n  function getFetcher(key) {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  } // Trigger a fetcher load/submit for the given fetcher key\n\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    if (fetchControllers.has(key)) abortFetcher(key);\n    var matches = matchRoutes(dataRoutes, href, init.basename);\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: href\n      }));\n      return;\n    }\n    var _normalizeNavigateOpt = normalizeNavigateOptions(href, opts, true),\n      path = _normalizeNavigateOpt.path,\n      submission = _normalizeNavigateOpt.submission;\n    var match = getTargetMatch(matches, path);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    } // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n\n    fetchLoadMatches.set(key, {\n      routeId: routeId,\n      path: path,\n      match: match,\n      matches: matches\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  } // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  function handleFetcherAction(_x20, _x21, _x22, _x23, _x24, _x25) {\n    return _handleFetcherAction.apply(this, arguments);\n  } // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  function _handleFetcherAction() {\n    _handleFetcherAction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(key, routeId, path, match, requestMatches, submission) {\n      var _error2, existingFetcher, fetcher, abortController, fetchRequest, actionResult, loadingFetcher, nextLocation, revalidationRequest, matches, loadId, loadFetcher, _getMatchesToLoad3, _getMatchesToLoad4, matchesToLoad, revalidatingFetchers, _yield$callLoadersAnd2, results, loaderResults, fetcherResults, redirect, _processLoaderData2, loaderData, errors, doneFetcher, didAbortFetchLoads;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            interruptActiveLoads();\n            fetchLoadMatches.delete(key);\n            if (match.route.action) {\n              _context6.next = 6;\n              break;\n            }\n            _error2 = getInternalRouterError(405, {\n              method: submission.formMethod,\n              pathname: path,\n              routeId: routeId\n            });\n            setFetcherError(key, routeId, _error2);\n            return _context6.abrupt(\"return\");\n          case 6:\n            // Put this fetcher into it's submitting state\n            existingFetcher = state.fetchers.get(key);\n            fetcher = _extends({\n              state: \"submitting\"\n            }, submission, {\n              data: existingFetcher && existingFetcher.data,\n              \" _hasFetcherDoneAnything \": true\n            });\n            state.fetchers.set(key, fetcher);\n            updateState({\n              fetchers: new Map(state.fetchers)\n            }); // Call the action for the fetcher\n            abortController = new AbortController();\n            fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n            fetchControllers.set(key, abortController);\n            _context6.next = 15;\n            return callLoaderOrAction(\"action\", fetchRequest, match, requestMatches, router.basename);\n          case 15:\n            actionResult = _context6.sent;\n            if (!fetchRequest.signal.aborted) {\n              _context6.next = 19;\n              break;\n            }\n            // We can delete this so long as we weren't aborted by ou our own fetcher\n            // re-submit which would have put _new_ controller is in fetchControllers\n            if (fetchControllers.get(key) === abortController) {\n              fetchControllers.delete(key);\n            }\n            return _context6.abrupt(\"return\");\n          case 19:\n            if (!isRedirectResult(actionResult)) {\n              _context6.next = 26;\n              break;\n            }\n            fetchControllers.delete(key);\n            fetchRedirectIds.add(key);\n            loadingFetcher = _extends({\n              state: \"loading\"\n            }, submission, {\n              data: undefined,\n              \" _hasFetcherDoneAnything \": true\n            });\n            state.fetchers.set(key, loadingFetcher);\n            updateState({\n              fetchers: new Map(state.fetchers)\n            });\n            return _context6.abrupt(\"return\", startRedirectNavigation(state, actionResult, {\n              isFetchActionRedirect: true\n            }));\n          case 26:\n            if (!isErrorResult(actionResult)) {\n              _context6.next = 29;\n              break;\n            }\n            setFetcherError(key, routeId, actionResult.error);\n            return _context6.abrupt(\"return\");\n          case 29:\n            if (!isDeferredResult(actionResult)) {\n              _context6.next = 31;\n              break;\n            }\n            throw getInternalRouterError(400, {\n              type: \"defer-action\"\n            });\n          case 31:\n            // Start the data load for current matches, or the next location if we're\n            // in the middle of a navigation\n            nextLocation = state.navigation.location || state.location;\n            revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n            matches = state.navigation.state !== \"idle\" ? matchRoutes(dataRoutes, state.navigation.location, init.basename) : state.matches;\n            invariant(matches, \"Didn't find any matches after fetcher action\");\n            loadId = ++incrementingLoadId;\n            fetchReloadIds.set(key, loadId);\n            loadFetcher = _extends({\n              state: \"loading\",\n              data: actionResult.data\n            }, submission, {\n              \" _hasFetcherDoneAnything \": true\n            });\n            state.fetchers.set(key, loadFetcher);\n            _getMatchesToLoad3 = getMatchesToLoad(init.history, state, matches, submission, nextLocation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, _defineProperty({}, match.route.id, actionResult.data), undefined,\n            // No need to send through errors since we short circuit above\n            fetchLoadMatches), _getMatchesToLoad4 = _slicedToArray(_getMatchesToLoad3, 2), matchesToLoad = _getMatchesToLoad4[0], revalidatingFetchers = _getMatchesToLoad4[1]; // Put all revalidating fetchers into the loading state, except for the\n            // current fetcher which we want to keep in it's current loading state which\n            // contains it's action submission info + action data\n            revalidatingFetchers.filter(function (rf) {\n              return rf.key !== key;\n            }).forEach(function (rf) {\n              var staleKey = rf.key;\n              var existingFetcher = state.fetchers.get(staleKey);\n              var revalidatingFetcher = {\n                state: \"loading\",\n                data: existingFetcher && existingFetcher.data,\n                formMethod: undefined,\n                formAction: undefined,\n                formEncType: undefined,\n                formData: undefined,\n                \" _hasFetcherDoneAnything \": true\n              };\n              state.fetchers.set(staleKey, revalidatingFetcher);\n              fetchControllers.set(staleKey, abortController);\n            });\n            updateState({\n              fetchers: new Map(state.fetchers)\n            });\n            _context6.next = 44;\n            return callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n          case 44:\n            _yield$callLoadersAnd2 = _context6.sent;\n            results = _yield$callLoadersAnd2.results;\n            loaderResults = _yield$callLoadersAnd2.loaderResults;\n            fetcherResults = _yield$callLoadersAnd2.fetcherResults;\n            if (!abortController.signal.aborted) {\n              _context6.next = 50;\n              break;\n            }\n            return _context6.abrupt(\"return\");\n          case 50:\n            fetchReloadIds.delete(key);\n            fetchControllers.delete(key);\n            revalidatingFetchers.forEach(function (r) {\n              return fetchControllers.delete(r.key);\n            });\n            redirect = findRedirect(results);\n            if (!redirect) {\n              _context6.next = 56;\n              break;\n            }\n            return _context6.abrupt(\"return\", startRedirectNavigation(state, redirect));\n          case 56:\n            // Process and commit output from loaders\n            _processLoaderData2 = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds), loaderData = _processLoaderData2.loaderData, errors = _processLoaderData2.errors;\n            doneFetcher = {\n              state: \"idle\",\n              data: actionResult.data,\n              formMethod: undefined,\n              formAction: undefined,\n              formEncType: undefined,\n              formData: undefined,\n              \" _hasFetcherDoneAnything \": true\n            };\n            state.fetchers.set(key, doneFetcher);\n            didAbortFetchLoads = abortStaleFetchLoads(loadId); // If we are currently in a navigation loading state and this fetcher is\n            // more recent than the navigation, we want the newer data so abort the\n            // navigation and complete it with the fetcher data\n            if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n              invariant(pendingAction, \"Expected pending action\");\n              pendingNavigationController && pendingNavigationController.abort();\n              completeNavigation(state.navigation.location, {\n                matches: matches,\n                loaderData: loaderData,\n                errors: errors,\n                fetchers: new Map(state.fetchers)\n              });\n            } else {\n              // otherwise just update with the fetcher data, preserving any existing\n              // loaderData for loaders that did not need to reload.  We have to\n              // manually merge here since we aren't going through completeNavigation\n              updateState(_extends({\n                errors: errors,\n                loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors)\n              }, didAbortFetchLoads ? {\n                fetchers: new Map(state.fetchers)\n              } : {}));\n              isRevalidationRequired = false;\n            }\n          case 61:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6);\n    }));\n    return _handleFetcherAction.apply(this, arguments);\n  }\n  function handleFetcherLoader(_x26, _x27, _x28, _x29, _x30, _x31) {\n    return _handleFetcherLoader.apply(this, arguments);\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  function _handleFetcherLoader() {\n    _handleFetcherLoader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(key, routeId, path, match, matches, submission) {\n      var existingFetcher, loadingFetcher, abortController, fetchRequest, result, boundaryMatch, doneFetcher;\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            existingFetcher = state.fetchers.get(key); // Put this fetcher into it's loading state\n            loadingFetcher = _extends({\n              state: \"loading\",\n              formMethod: undefined,\n              formAction: undefined,\n              formEncType: undefined,\n              formData: undefined\n            }, submission, {\n              data: existingFetcher && existingFetcher.data,\n              \" _hasFetcherDoneAnything \": true\n            });\n            state.fetchers.set(key, loadingFetcher);\n            updateState({\n              fetchers: new Map(state.fetchers)\n            }); // Call the loader for this fetcher route match\n            abortController = new AbortController();\n            fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n            fetchControllers.set(key, abortController);\n            _context7.next = 9;\n            return callLoaderOrAction(\"loader\", fetchRequest, match, matches, router.basename);\n          case 9:\n            result = _context7.sent;\n            if (!isDeferredResult(result)) {\n              _context7.next = 17;\n              break;\n            }\n            _context7.next = 13;\n            return resolveDeferredData(result, fetchRequest.signal, true);\n          case 13:\n            _context7.t0 = _context7.sent;\n            if (_context7.t0) {\n              _context7.next = 16;\n              break;\n            }\n            _context7.t0 = result;\n          case 16:\n            result = _context7.t0;\n          case 17:\n            // We can delete this so long as we weren't aborted by ou our own fetcher\n            // re-load which would have put _new_ controller is in fetchControllers\n\n            if (fetchControllers.get(key) === abortController) {\n              fetchControllers.delete(key);\n            }\n            if (!fetchRequest.signal.aborted) {\n              _context7.next = 20;\n              break;\n            }\n            return _context7.abrupt(\"return\");\n          case 20:\n            if (!isRedirectResult(result)) {\n              _context7.next = 24;\n              break;\n            }\n            _context7.next = 23;\n            return startRedirectNavigation(state, result);\n          case 23:\n            return _context7.abrupt(\"return\");\n          case 24:\n            if (!isErrorResult(result)) {\n              _context7.next = 29;\n              break;\n            }\n            boundaryMatch = findNearestBoundary(state.matches, routeId);\n            state.fetchers.delete(key); // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n            // do we need to behave any differently with our non-redirect errors?\n            // What if it was a non-redirect Response?\n\n            updateState({\n              fetchers: new Map(state.fetchers),\n              errors: _defineProperty({}, boundaryMatch.route.id, result.error)\n            });\n            return _context7.abrupt(\"return\");\n          case 29:\n            invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\"); // Put the fetcher back into an idle state\n            doneFetcher = {\n              state: \"idle\",\n              data: result.data,\n              formMethod: undefined,\n              formAction: undefined,\n              formEncType: undefined,\n              formData: undefined,\n              \" _hasFetcherDoneAnything \": true\n            };\n            state.fetchers.set(key, doneFetcher);\n            updateState({\n              fetchers: new Map(state.fetchers)\n            });\n          case 33:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, _callee7);\n    }));\n    return _handleFetcherLoader.apply(this, arguments);\n  }\n  function startRedirectNavigation(_x32, _x33, _x34) {\n    return _startRedirectNavigation.apply(this, arguments);\n  }\n  function _startRedirectNavigation() {\n    _startRedirectNavigation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(state, redirect, _temp) {\n      var _window, _ref6, submission, replace, isFetchActionRedirect, redirectLocation, newOrigin, redirectHistoryAction, _state$navigation, formMethod, formAction, formEncType, formData;\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n            _ref6 = _temp === void 0 ? {} : _temp, submission = _ref6.submission, replace = _ref6.replace, isFetchActionRedirect = _ref6.isFetchActionRedirect;\n            if (redirect.revalidate) {\n              isRevalidationRequired = true;\n            }\n            redirectLocation = createLocation(state.location, redirect.location,\n            // TODO: This can be removed once we get rid of useTransition in Remix v2\n            _extends({\n              _isRedirect: true\n            }, isFetchActionRedirect ? {\n              _isFetchActionRedirect: true\n            } : {}));\n            invariant(redirectLocation, \"Expected a location on the redirect navigation\"); // Check if this an external redirect that goes to a new origin\n            if (!(isBrowser && typeof ((_window = window) == null ? void 0 : _window.location) !== \"undefined\")) {\n              _context8.next = 9;\n              break;\n            }\n            newOrigin = init.history.createURL(redirect.location).origin;\n            if (!(window.location.origin !== newOrigin)) {\n              _context8.next = 9;\n              break;\n            }\n            if (replace) {\n              window.location.replace(redirect.location);\n            } else {\n              window.location.assign(redirect.location);\n            }\n            return _context8.abrupt(\"return\");\n          case 9:\n            // There's no need to abort on redirects, since we don't detect the\n            // redirect until the action/loaders have settled\n\n            pendingNavigationController = null;\n            redirectHistoryAction = replace === true ? Action.Replace : Action.Push; // Use the incoming submission if provided, fallback on the active one in\n            // state.navigation\n            _state$navigation = state.navigation, formMethod = _state$navigation.formMethod, formAction = _state$navigation.formAction, formEncType = _state$navigation.formEncType, formData = _state$navigation.formData;\n            if (!submission && formMethod && formAction && formData && formEncType) {\n              submission = {\n                formMethod: formMethod,\n                formAction: formAction,\n                formEncType: formEncType,\n                formData: formData\n              };\n            } // If this was a 307/308 submission we want to preserve the HTTP method and\n            // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n            // redirected location\n            if (!(redirectPreserveMethodStatusCodes.has(redirect.status) && submission && isMutationMethod(submission.formMethod))) {\n              _context8.next = 18;\n              break;\n            }\n            _context8.next = 16;\n            return startNavigation(redirectHistoryAction, redirectLocation, {\n              submission: _extends({}, submission, {\n                formAction: redirect.location\n              }),\n              // Preserve this flag across redirects\n              preventScrollReset: pendingPreventScrollReset\n            });\n          case 16:\n            _context8.next = 20;\n            break;\n          case 18:\n            _context8.next = 20;\n            return startNavigation(redirectHistoryAction, redirectLocation, {\n              overrideNavigation: {\n                state: \"loading\",\n                location: redirectLocation,\n                formMethod: submission ? submission.formMethod : undefined,\n                formAction: submission ? submission.formAction : undefined,\n                formEncType: submission ? submission.formEncType : undefined,\n                formData: submission ? submission.formData : undefined\n              },\n              // Preserve this flag across redirects\n              preventScrollReset: pendingPreventScrollReset\n            });\n          case 20:\n          case \"end\":\n            return _context8.stop();\n        }\n      }, _callee8);\n    }));\n    return _startRedirectNavigation.apply(this, arguments);\n  }\n  function callLoadersAndMaybeResolveData(_x35, _x36, _x37, _x38, _x39) {\n    return _callLoadersAndMaybeResolveData.apply(this, arguments);\n  }\n  function _callLoadersAndMaybeResolveData() {\n    _callLoadersAndMaybeResolveData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {\n      var results, loaderResults, fetcherResults;\n      return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n        while (1) switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return Promise.all([].concat(_toConsumableArray(matchesToLoad.map(function (match) {\n              return callLoaderOrAction(\"loader\", request, match, matches, router.basename);\n            })), _toConsumableArray(fetchersToLoad.map(function (f) {\n              return callLoaderOrAction(\"loader\", createClientSideRequest(init.history, f.path, request.signal), f.match, f.matches, router.basename);\n            }))));\n          case 2:\n            results = _context9.sent;\n            loaderResults = results.slice(0, matchesToLoad.length);\n            fetcherResults = results.slice(matchesToLoad.length);\n            _context9.next = 7;\n            return Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, request.signal, false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(function (f) {\n              return f.match;\n            }), fetcherResults, request.signal, true)]);\n          case 7:\n            return _context9.abrupt(\"return\", {\n              results: results,\n              loaderResults: loaderResults,\n              fetcherResults: fetcherResults\n            });\n          case 8:\n          case \"end\":\n            return _context9.stop();\n        }\n      }, _callee9);\n    }));\n    return _callLoadersAndMaybeResolveData.apply(this, arguments);\n  }\n  function interruptActiveLoads() {\n    var _cancelledDeferredRou;\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true; // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n\n    (_cancelledDeferredRou = cancelledDeferredRoutes).push.apply(_cancelledDeferredRou, _toConsumableArray(cancelActiveDeferreds())); // Abort in-flight fetcher loads\n\n    fetchLoadMatches.forEach(function (_, key) {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n  function setFetcherError(key, routeId, error) {\n    var boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: _defineProperty({}, boundaryMatch.route.id, error),\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function deleteFetcher(key) {\n    if (fetchControllers.has(key)) abortFetcher(key);\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n  function abortFetcher(key) {\n    var controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n  function markFetchersDone(keys) {\n    var _iterator3 = _createForOfIteratorHelper(keys),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var key = _step3.value;\n        var fetcher = getFetcher(key);\n        var doneFetcher = {\n          state: \"idle\",\n          data: fetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true\n        };\n        state.fetchers.set(key, doneFetcher);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n  function markFetchRedirectsDone() {\n    var doneKeys = [];\n    var _iterator4 = _createForOfIteratorHelper(fetchRedirectIds),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var key = _step4.value;\n        var fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          fetchRedirectIds.delete(key);\n          doneKeys.push(key);\n        }\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    markFetchersDone(doneKeys);\n  }\n  function abortStaleFetchLoads(landedId) {\n    var yeetedKeys = [];\n    var _iterator5 = _createForOfIteratorHelper(fetchReloadIds),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var _step5$value = _slicedToArray(_step5.value, 2),\n          key = _step5$value[0],\n          id = _step5$value[1];\n        if (id < landedId) {\n          var fetcher = state.fetchers.get(key);\n          invariant(fetcher, \"Expected fetcher: \" + key);\n          if (fetcher.state === \"loading\") {\n            abortFetcher(key);\n            fetchReloadIds.delete(key);\n            yeetedKeys.push(key);\n          }\n        }\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    var blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n      if (activeBlocker == null) {\n        // This is now the active blocker\n        activeBlocker = key;\n      } else if (key !== activeBlocker) {\n        warning(false, \"A router only supports one blocker at a time\");\n      }\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n    if (activeBlocker === key) {\n      activeBlocker = null;\n    }\n  } // Utility function to update blockers, ensuring valid state transitions\n\n  function updateBlocker(key, newBlocker) {\n    var blocker = state.blockers.get(key) || IDLE_BLOCKER; // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    state.blockers.set(key, newBlocker);\n    updateState({\n      blockers: new Map(state.blockers)\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    var currentLocation = _ref2.currentLocation,\n      nextLocation = _ref2.nextLocation,\n      historyAction = _ref2.historyAction;\n    if (activeBlocker == null) {\n      return;\n    } // We only allow a single blocker at the moment.  This will need to be\n    // updated if we enhance to support multiple blockers in the future\n\n    var blockerFunction = blockerFunctions.get(activeBlocker);\n    invariant(blockerFunction, \"Could not find a function for the active blocker\");\n    var blocker = state.blockers.get(activeBlocker);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    } // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n\n    if (blockerFunction({\n      currentLocation: currentLocation,\n      nextLocation: nextLocation,\n      historyAction: historyAction\n    })) {\n      return activeBlocker;\n    }\n  }\n  function cancelActiveDeferreds(predicate) {\n    var cancelledRouteIds = [];\n    activeDeferreds.forEach(function (dfd, routeId) {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  } // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || function (location) {\n      return location.key;\n    }; // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      var y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return function () {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      var userMatches = matches.map(function (m) {\n        return createUseMatchesMatch(m, state.loaderData);\n      });\n      var key = getScrollRestorationKey(location, userMatches) || location.key;\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      var userMatches = matches.map(function (m) {\n        return createUseMatchesMatch(m, state.loaderData);\n      });\n      var key = getScrollRestorationKey(location, userMatches) || location.key;\n      var y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  router = {\n    get basename() {\n      return init.basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize: initialize,\n    subscribe: subscribe,\n    enableScrollRestoration: enableScrollRestoration,\n    navigate: navigate,\n    fetch: fetch,\n    revalidate: revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: function createHref(to) {\n      return init.history.createHref(to);\n    },\n    encodeLocation: function encodeLocation(to) {\n      return init.history.encodeLocation(to);\n    },\n    getFetcher: getFetcher,\n    deleteFetcher: deleteFetcher,\n    dispose: dispose,\n    getBlocker: getBlocker,\n    deleteBlocker: deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds\n  };\n  return router;\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nvar UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  var dataRoutes = convertRoutesToDataRoutes(routes);\n  var basename = (opts ? opts.basename : null) || \"/\";\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  function query(_x40, _x41) {\n    return _query.apply(this, arguments);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  function _query() {\n    _query = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(request, _temp2) {\n      var _ref7, requestContext, url, method, location, matches, error, _getShortCircuitMatch3, methodNotAllowedMatches, route, _error3, _getShortCircuitMatch4, notFoundMatches, _route2, result;\n      return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n        while (1) switch (_context10.prev = _context10.next) {\n          case 0:\n            _ref7 = _temp2 === void 0 ? {} : _temp2, requestContext = _ref7.requestContext;\n            url = new URL(request.url);\n            method = request.method.toLowerCase();\n            location = createLocation(\"\", createPath(url), null, \"default\");\n            matches = matchRoutes(dataRoutes, location, basename); // SSR supports HEAD requests while SPA doesn't\n            if (!(!isValidMethod(method) && method !== \"head\")) {\n              _context10.next = 11;\n              break;\n            }\n            error = getInternalRouterError(405, {\n              method: method\n            });\n            _getShortCircuitMatch3 = getShortCircuitMatches(dataRoutes), methodNotAllowedMatches = _getShortCircuitMatch3.matches, route = _getShortCircuitMatch3.route;\n            return _context10.abrupt(\"return\", {\n              basename: basename,\n              location: location,\n              matches: methodNotAllowedMatches,\n              loaderData: {},\n              actionData: null,\n              errors: _defineProperty({}, route.id, error),\n              statusCode: error.status,\n              loaderHeaders: {},\n              actionHeaders: {},\n              activeDeferreds: null\n            });\n          case 11:\n            if (matches) {\n              _context10.next = 15;\n              break;\n            }\n            _error3 = getInternalRouterError(404, {\n              pathname: location.pathname\n            });\n            _getShortCircuitMatch4 = getShortCircuitMatches(dataRoutes), notFoundMatches = _getShortCircuitMatch4.matches, _route2 = _getShortCircuitMatch4.route;\n            return _context10.abrupt(\"return\", {\n              basename: basename,\n              location: location,\n              matches: notFoundMatches,\n              loaderData: {},\n              actionData: null,\n              errors: _defineProperty({}, _route2.id, _error3),\n              statusCode: _error3.status,\n              loaderHeaders: {},\n              actionHeaders: {},\n              activeDeferreds: null\n            });\n          case 15:\n            _context10.next = 17;\n            return queryImpl(request, location, matches, requestContext);\n          case 17:\n            result = _context10.sent;\n            if (!isResponse(result)) {\n              _context10.next = 20;\n              break;\n            }\n            return _context10.abrupt(\"return\", result);\n          case 20:\n            return _context10.abrupt(\"return\", _extends({\n              location: location,\n              basename: basename\n            }, result));\n          case 21:\n          case \"end\":\n            return _context10.stop();\n        }\n      }, _callee10);\n    }));\n    return _query.apply(this, arguments);\n  }\n  function queryRoute(_x42, _x43) {\n    return _queryRoute.apply(this, arguments);\n  }\n  function _queryRoute() {\n    _queryRoute = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(request, _temp3) {\n      var _ref8, routeId, requestContext, url, method, location, matches, match, result, error, _result$activeDeferre, data;\n      return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n        while (1) switch (_context11.prev = _context11.next) {\n          case 0:\n            _ref8 = _temp3 === void 0 ? {} : _temp3, routeId = _ref8.routeId, requestContext = _ref8.requestContext;\n            url = new URL(request.url);\n            method = request.method.toLowerCase();\n            location = createLocation(\"\", createPath(url), null, \"default\");\n            matches = matchRoutes(dataRoutes, location, basename); // SSR supports HEAD requests while SPA doesn't\n            if (!(!isValidMethod(method) && method !== \"head\" && method !== \"options\")) {\n              _context11.next = 9;\n              break;\n            }\n            throw getInternalRouterError(405, {\n              method: method\n            });\n          case 9:\n            if (matches) {\n              _context11.next = 11;\n              break;\n            }\n            throw getInternalRouterError(404, {\n              pathname: location.pathname\n            });\n          case 11:\n            match = routeId ? matches.find(function (m) {\n              return m.route.id === routeId;\n            }) : getTargetMatch(matches, location);\n            if (!(routeId && !match)) {\n              _context11.next = 16;\n              break;\n            }\n            throw getInternalRouterError(403, {\n              pathname: location.pathname,\n              routeId: routeId\n            });\n          case 16:\n            if (match) {\n              _context11.next = 18;\n              break;\n            }\n            throw getInternalRouterError(404, {\n              pathname: location.pathname\n            });\n          case 18:\n            _context11.next = 20;\n            return queryImpl(request, location, matches, requestContext, match);\n          case 20:\n            result = _context11.sent;\n            if (!isResponse(result)) {\n              _context11.next = 23;\n              break;\n            }\n            return _context11.abrupt(\"return\", result);\n          case 23:\n            error = result.errors ? Object.values(result.errors)[0] : undefined;\n            if (!(error !== undefined)) {\n              _context11.next = 26;\n              break;\n            }\n            throw error;\n          case 26:\n            if (!result.actionData) {\n              _context11.next = 28;\n              break;\n            }\n            return _context11.abrupt(\"return\", Object.values(result.actionData)[0]);\n          case 28:\n            if (!result.loaderData) {\n              _context11.next = 32;\n              break;\n            }\n            data = Object.values(result.loaderData)[0];\n            if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n              data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n            }\n            return _context11.abrupt(\"return\", data);\n          case 32:\n            return _context11.abrupt(\"return\", undefined);\n          case 33:\n          case \"end\":\n            return _context11.stop();\n        }\n      }, _callee11);\n    }));\n    return _queryRoute.apply(this, arguments);\n  }\n  function queryImpl(_x44, _x45, _x46, _x47, _x48) {\n    return _queryImpl.apply(this, arguments);\n  }\n  function _queryImpl() {\n    _queryImpl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(request, location, matches, requestContext, routeMatch) {\n      var _result, result;\n      return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n        while (1) switch (_context12.prev = _context12.next) {\n          case 0:\n            invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n            _context12.prev = 1;\n            if (!isMutationMethod(request.method.toLowerCase())) {\n              _context12.next = 7;\n              break;\n            }\n            _context12.next = 5;\n            return submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);\n          case 5:\n            _result = _context12.sent;\n            return _context12.abrupt(\"return\", _result);\n          case 7:\n            _context12.next = 9;\n            return loadRouteData(request, matches, requestContext, routeMatch);\n          case 9:\n            result = _context12.sent;\n            return _context12.abrupt(\"return\", isResponse(result) ? result : _extends({}, result, {\n              actionData: null,\n              actionHeaders: {}\n            }));\n          case 13:\n            _context12.prev = 13;\n            _context12.t0 = _context12[\"catch\"](1);\n            if (!isQueryRouteResponse(_context12.t0)) {\n              _context12.next = 19;\n              break;\n            }\n            if (!(_context12.t0.type === ResultType.error && !isRedirectResponse(_context12.t0.response))) {\n              _context12.next = 18;\n              break;\n            }\n            throw _context12.t0.response;\n          case 18:\n            return _context12.abrupt(\"return\", _context12.t0.response);\n          case 19:\n            if (!isRedirectResponse(_context12.t0)) {\n              _context12.next = 21;\n              break;\n            }\n            return _context12.abrupt(\"return\", _context12.t0);\n          case 21:\n            throw _context12.t0;\n          case 22:\n          case \"end\":\n            return _context12.stop();\n        }\n      }, _callee12, null, [[1, 13]]);\n    }));\n    return _queryImpl.apply(this, arguments);\n  }\n  function submit(_x49, _x50, _x51, _x52, _x53) {\n    return _submit.apply(this, arguments);\n  }\n  function _submit() {\n    _submit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(request, matches, actionMatch, requestContext, isRouteRequest) {\n      var result, error, method, _error4, boundaryMatch, _context13, loaderRequest, context;\n      return _regeneratorRuntime().wrap(function _callee13$(_context14) {\n        while (1) switch (_context14.prev = _context14.next) {\n          case 0:\n            if (actionMatch.route.action) {\n              _context14.next = 7;\n              break;\n            }\n            error = getInternalRouterError(405, {\n              method: request.method,\n              pathname: new URL(request.url).pathname,\n              routeId: actionMatch.route.id\n            });\n            if (!isRouteRequest) {\n              _context14.next = 4;\n              break;\n            }\n            throw error;\n          case 4:\n            result = {\n              type: ResultType.error,\n              error: error\n            };\n            _context14.next = 13;\n            break;\n          case 7:\n            _context14.next = 9;\n            return callLoaderOrAction(\"action\", request, actionMatch, matches, basename, true, isRouteRequest, requestContext);\n          case 9:\n            result = _context14.sent;\n            if (!request.signal.aborted) {\n              _context14.next = 13;\n              break;\n            }\n            method = isRouteRequest ? \"queryRoute\" : \"query\";\n            throw new Error(method + \"() call aborted\");\n          case 13:\n            if (!isRedirectResult(result)) {\n              _context14.next = 15;\n              break;\n            }\n            throw new Response(null, {\n              status: result.status,\n              headers: {\n                Location: result.location\n              }\n            });\n          case 15:\n            if (!isDeferredResult(result)) {\n              _context14.next = 20;\n              break;\n            }\n            _error4 = getInternalRouterError(400, {\n              type: \"defer-action\"\n            });\n            if (!isRouteRequest) {\n              _context14.next = 19;\n              break;\n            }\n            throw _error4;\n          case 19:\n            result = {\n              type: ResultType.error,\n              error: _error4\n            };\n          case 20:\n            if (!isRouteRequest) {\n              _context14.next = 24;\n              break;\n            }\n            if (!isErrorResult(result)) {\n              _context14.next = 23;\n              break;\n            }\n            throw result.error;\n          case 23:\n            return _context14.abrupt(\"return\", {\n              matches: [actionMatch],\n              loaderData: {},\n              actionData: _defineProperty({}, actionMatch.route.id, result.data),\n              errors: null,\n              // Note: statusCode + headers are unused here since queryRoute will\n              // return the raw Response or value\n              statusCode: 200,\n              loaderHeaders: {},\n              actionHeaders: {},\n              activeDeferreds: null\n            });\n          case 24:\n            if (!isErrorResult(result)) {\n              _context14.next = 30;\n              break;\n            }\n            // Store off the pending error - we use it to determine which loaders\n            // to call and will commit it when we complete the navigation\n            boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n            _context14.next = 28;\n            return loadRouteData(request, matches, requestContext, undefined, _defineProperty({}, boundaryMatch.route.id, result.error));\n          case 28:\n            _context13 = _context14.sent;\n            return _context14.abrupt(\"return\", _extends({}, _context13, {\n              statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,\n              actionData: null,\n              actionHeaders: _extends({}, result.headers ? _defineProperty({}, actionMatch.route.id, result.headers) : {})\n            }));\n          case 30:\n            // Create a GET request for the loaders\n            loaderRequest = new Request(request.url, {\n              headers: request.headers,\n              redirect: request.redirect,\n              signal: request.signal\n            });\n            _context14.next = 33;\n            return loadRouteData(loaderRequest, matches, requestContext);\n          case 33:\n            context = _context14.sent;\n            return _context14.abrupt(\"return\", _extends({}, context, result.statusCode ? {\n              statusCode: result.statusCode\n            } : {}, {\n              actionData: _defineProperty({}, actionMatch.route.id, result.data),\n              actionHeaders: _extends({}, result.headers ? _defineProperty({}, actionMatch.route.id, result.headers) : {})\n            }));\n          case 35:\n          case \"end\":\n            return _context14.stop();\n        }\n      }, _callee13);\n    }));\n    return _submit.apply(this, arguments);\n  }\n  function loadRouteData(_x54, _x55, _x56, _x57, _x58) {\n    return _loadRouteData.apply(this, arguments);\n  }\n  function _loadRouteData() {\n    _loadRouteData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(request, matches, requestContext, routeMatch, pendingActionError) {\n      var isRouteRequest, requestMatches, matchesToLoad, results, method, activeDeferreds, context, executedLoaders;\n      return _regeneratorRuntime().wrap(function _callee14$(_context15) {\n        while (1) switch (_context15.prev = _context15.next) {\n          case 0:\n            isRouteRequest = routeMatch != null; // Short circuit if we have no loaders to run (queryRoute())\n            if (!(isRouteRequest && !(routeMatch != null && routeMatch.route.loader))) {\n              _context15.next = 3;\n              break;\n            }\n            throw getInternalRouterError(400, {\n              method: request.method,\n              pathname: new URL(request.url).pathname,\n              routeId: routeMatch == null ? void 0 : routeMatch.route.id\n            });\n          case 3:\n            requestMatches = routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]);\n            matchesToLoad = requestMatches.filter(function (m) {\n              return m.route.loader;\n            }); // Short circuit if we have no loaders to run (query())\n            if (!(matchesToLoad.length === 0)) {\n              _context15.next = 7;\n              break;\n            }\n            return _context15.abrupt(\"return\", {\n              matches: matches,\n              // Add a null for all matched routes for proper revalidation on the client\n              loaderData: matches.reduce(function (acc, m) {\n                return Object.assign(acc, _defineProperty({}, m.route.id, null));\n              }, {}),\n              errors: pendingActionError || null,\n              statusCode: 200,\n              loaderHeaders: {},\n              activeDeferreds: null\n            });\n          case 7:\n            _context15.next = 9;\n            return Promise.all(_toConsumableArray(matchesToLoad.map(function (match) {\n              return callLoaderOrAction(\"loader\", request, match, matches, basename, true, isRouteRequest, requestContext);\n            })));\n          case 9:\n            results = _context15.sent;\n            if (!request.signal.aborted) {\n              _context15.next = 13;\n              break;\n            }\n            method = isRouteRequest ? \"queryRoute\" : \"query\";\n            throw new Error(method + \"() call aborted\");\n          case 13:\n            // Process and commit output from loaders\n            activeDeferreds = new Map();\n            context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError, activeDeferreds); // Add a null for any non-loader matches for proper revalidation on the client\n            executedLoaders = new Set(matchesToLoad.map(function (match) {\n              return match.route.id;\n            }));\n            matches.forEach(function (match) {\n              if (!executedLoaders.has(match.route.id)) {\n                context.loaderData[match.route.id] = null;\n              }\n            });\n            return _context15.abrupt(\"return\", _extends({}, context, {\n              matches: matches,\n              activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n            }));\n          case 18:\n          case \"end\":\n            return _context15.stop();\n        }\n      }, _callee14);\n    }));\n    return _loadRouteData.apply(this, arguments);\n  }\n  return {\n    dataRoutes: dataRoutes,\n    query: query,\n    queryRoute: queryRoute\n  };\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\n\nfunction getStaticContextFromError(routes, context, error) {\n  var newContext = _extends({}, context, {\n    statusCode: 500,\n    errors: _defineProperty({}, context._deepestRenderedBoundaryId || routes[0].id, error)\n  });\n  return newContext;\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && \"formData\" in opts;\n} // Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\n\nfunction normalizeNavigateOptions(to, opts, isFetcher) {\n  if (isFetcher === void 0) {\n    isFetcher = false;\n  }\n  var path = typeof to === \"string\" ? to : createPath(to); // Return location verbatim on non-submission navigations\n\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path: path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path: path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  } // Create a Submission on non-GET navigations\n\n  var submission;\n  if (opts.formData) {\n    submission = {\n      formMethod: opts.formMethod || \"get\",\n      formAction: stripHashFromPath(path),\n      formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n      formData: opts.formData\n    };\n    if (isMutationMethod(submission.formMethod)) {\n      return {\n        path: path,\n        submission: submission\n      };\n    }\n  } // Flatten submission onto URLSearchParams for GET submissions\n\n  var parsedPath = parsePath(path);\n  var searchParams = convertFormDataToSearchParams(opts.formData); // Since fetcher GET submissions only run a single loader (as opposed to\n  // navigation GET submissions which run all loaders), we need to preserve\n  // any incoming ?index params\n\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission: submission\n  };\n} // Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\n\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  var boundaryMatches = matches;\n  if (boundaryId) {\n    var index = matches.findIndex(function (m) {\n      return m.route.id === boundaryId;\n    });\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, pendingActionData, pendingError, fetchLoadMatches) {\n  var actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : undefined;\n  var currentUrl = history.createURL(state.location);\n  var nextUrl = history.createURL(location);\n  var defaultShouldRevalidate =\n  // Forced revalidation due to submission, useRevalidate, or X-Remix-Revalidate\n  isRevalidationRequired ||\n  // Clicked the same link, resubmitted a GET form\n  currentUrl.toString() === nextUrl.toString() ||\n  // Search params affect all loaders\n  currentUrl.search !== nextUrl.search; // Pick navigation matches that are net-new or qualify for revalidation\n\n  var boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  var boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  var navigationMatches = boundaryMatches.filter(function (match, index) {\n    if (match.route.loader == null) {\n      return false;\n    } // Always call the loader on new route instances and pending defer cancellations\n\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(function (id) {\n      return id === match.route.id;\n    })) {\n      return true;\n    } // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n\n    var currentRouteMatch = state.matches[index];\n    var nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl: currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl: nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult: actionResult,\n      defaultShouldRevalidate: defaultShouldRevalidate || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  }); // Pick fetcher.loads that need to be revalidated\n\n  var revalidatingFetchers = [];\n  fetchLoadMatches && fetchLoadMatches.forEach(function (f, key) {\n    if (!matches.some(function (m) {\n      return m.route.id === f.routeId;\n    })) {\n      // This fetcher is not going to be present in the subsequent render so\n      // there's no need to revalidate it\n      return;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // This fetcher was cancelled from a prior action submission - force reload\n      revalidatingFetchers.push(_extends({\n        key: key\n      }, f));\n    } else {\n      // Revalidating fetchers are decoupled from the route matches since they\n      // hit a static href, so they _always_ check shouldRevalidate and the\n      // default is strictly if a revalidation is explicitly required (action\n      // submissions, useRevalidator, X-Remix-Revalidate).\n      var shouldRevalidate = shouldRevalidateLoader(f.match, _extends({\n        currentUrl: currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl: nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult: actionResult,\n        defaultShouldRevalidate: defaultShouldRevalidate\n      }));\n      if (shouldRevalidate) {\n        revalidatingFetchers.push(_extends({\n          key: key\n        }, f));\n      }\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  var isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id; // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n\n  var isMissingData = currentLoaderData[match.route.id] === undefined; // Always load if this is a net-new route or we don't yet have data\n\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  var currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    var routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction callLoaderOrAction(_x59, _x60, _x61, _x62, _x63, _x64, _x65, _x66) {\n  return _callLoaderOrAction.apply(this, arguments);\n} // Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction _callLoaderOrAction() {\n  _callLoaderOrAction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(type, request, match, matches, basename, isStaticRequest, isRouteRequest, requestContext) {\n    var resultType, result, reject, abortPromise, onReject, handler, status, location, isAbsolute, activeMatches, routePathnames, resolvedLocation, path, currentUrl, url, data, contentType;\n    return _regeneratorRuntime().wrap(function _callee15$(_context16) {\n      while (1) switch (_context16.prev = _context16.next) {\n        case 0:\n          if (basename === void 0) {\n            basename = \"/\";\n          }\n          if (isStaticRequest === void 0) {\n            isStaticRequest = false;\n          }\n          if (isRouteRequest === void 0) {\n            isRouteRequest = false;\n          }\n          abortPromise = new Promise(function (_, r) {\n            return reject = r;\n          });\n          onReject = function onReject() {\n            return reject();\n          };\n          request.signal.addEventListener(\"abort\", onReject);\n          _context16.prev = 6;\n          handler = match.route[type];\n          invariant(handler, \"Could not find the \" + type + \" to run on the \\\"\" + match.route.id + \"\\\" route\");\n          _context16.next = 11;\n          return Promise.race([handler({\n            request: request,\n            params: match.params,\n            context: requestContext\n          }), abortPromise]);\n        case 11:\n          result = _context16.sent;\n          invariant(result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n          _context16.next = 19;\n          break;\n        case 15:\n          _context16.prev = 15;\n          _context16.t0 = _context16[\"catch\"](6);\n          resultType = ResultType.error;\n          result = _context16.t0;\n        case 19:\n          _context16.prev = 19;\n          request.signal.removeEventListener(\"abort\", onReject);\n          return _context16.finish(19);\n        case 22:\n          if (!isResponse(result)) {\n            _context16.next = 48;\n            break;\n          }\n          status = result.status; // Process redirects\n          if (!redirectStatusCodes.has(status)) {\n            _context16.next = 33;\n            break;\n          }\n          location = result.headers.get(\"Location\");\n          invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n          isAbsolute = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i.test(location); // Support relative routing in internal redirects\n          if (!isAbsolute) {\n            activeMatches = matches.slice(0, matches.indexOf(match) + 1);\n            routePathnames = getPathContributingMatches(activeMatches).map(function (match) {\n              return match.pathnameBase;\n            });\n            resolvedLocation = resolveTo(location, routePathnames, new URL(request.url).pathname);\n            invariant(createPath(resolvedLocation), \"Unable to resolve redirect location: \" + location); // Prepend the basename to the redirect location if we have one\n\n            if (basename) {\n              path = resolvedLocation.pathname;\n              resolvedLocation.pathname = path === \"/\" ? basename : joinPaths([basename, path]);\n            }\n            location = createPath(resolvedLocation);\n          } else if (!isStaticRequest) {\n            // Strip off the protocol+origin for same-origin absolute redirects.\n            // If this is a static reques, we can let it go back to the browser\n            // as-is\n            currentUrl = new URL(request.url);\n            url = location.startsWith(\"//\") ? new URL(currentUrl.protocol + location) : new URL(location);\n            if (url.origin === currentUrl.origin) {\n              location = url.pathname + url.search + url.hash;\n            }\n          } // Don't process redirects in the router during static requests requests.\n          // Instead, throw the Response and let the server handle it with an HTTP\n          // redirect.  We also update the Location header in place in this flow so\n          // basename and relative routing is taken into account\n          if (!isStaticRequest) {\n            _context16.next = 32;\n            break;\n          }\n          result.headers.set(\"Location\", location);\n          throw result;\n        case 32:\n          return _context16.abrupt(\"return\", {\n            type: ResultType.redirect,\n            status: status,\n            location: location,\n            revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null\n          });\n        case 33:\n          if (!isRouteRequest) {\n            _context16.next = 35;\n            break;\n          }\n          throw {\n            type: resultType || ResultType.data,\n            response: result\n          };\n        case 35:\n          contentType = result.headers.get(\"Content-Type\"); // Check between word boundaries instead of startsWith() due to the last\n          // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n          if (!(contentType && /\\bapplication\\/json\\b/.test(contentType))) {\n            _context16.next = 42;\n            break;\n          }\n          _context16.next = 39;\n          return result.json();\n        case 39:\n          data = _context16.sent;\n          _context16.next = 45;\n          break;\n        case 42:\n          _context16.next = 44;\n          return result.text();\n        case 44:\n          data = _context16.sent;\n        case 45:\n          if (!(resultType === ResultType.error)) {\n            _context16.next = 47;\n            break;\n          }\n          return _context16.abrupt(\"return\", {\n            type: resultType,\n            error: new ErrorResponse(status, result.statusText, data),\n            headers: result.headers\n          });\n        case 47:\n          return _context16.abrupt(\"return\", {\n            type: ResultType.data,\n            data: data,\n            statusCode: result.status,\n            headers: result.headers\n          });\n        case 48:\n          if (!(resultType === ResultType.error)) {\n            _context16.next = 50;\n            break;\n          }\n          return _context16.abrupt(\"return\", {\n            type: resultType,\n            error: result\n          });\n        case 50:\n          if (!(result instanceof DeferredData)) {\n            _context16.next = 52;\n            break;\n          }\n          return _context16.abrupt(\"return\", {\n            type: ResultType.deferred,\n            deferredData: result\n          });\n        case 52:\n          return _context16.abrupt(\"return\", {\n            type: ResultType.data,\n            data: result\n          });\n        case 53:\n        case \"end\":\n          return _context16.stop();\n      }\n    }, _callee15, null, [[6, 15, 19, 22]]);\n  }));\n  return _callLoaderOrAction.apply(this, arguments);\n}\nfunction createClientSideRequest(history, location, signal, submission) {\n  var url = history.createURL(stripHashFromPath(location)).toString();\n  var init = {\n    signal: signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    var formMethod = submission.formMethod,\n      formEncType = submission.formEncType,\n      formData = submission.formData;\n    init.method = formMethod.toUpperCase();\n    init.body = formEncType === \"application/x-www-form-urlencoded\" ? convertFormDataToSearchParams(formData) : formData;\n  } // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  var searchParams = new URLSearchParams();\n  var _iterator6 = _createForOfIteratorHelper(formData.entries()),\n    _step6;\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var _step6$value = _slicedToArray(_step6.value, 2),\n        key = _step6$value[0],\n        value = _step6$value[1];\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n      searchParams.append(key, value instanceof File ? value.name : value);\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n  return searchParams;\n}\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {\n  // Fill in loaderData/errors from our loaders\n  var loaderData = {};\n  var errors = null;\n  var statusCode;\n  var foundError = false;\n  var loaderHeaders = {}; // Process loader results into state.loaderData/state.errors\n\n  results.forEach(function (result, index) {\n    var id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      var boundaryMatch = findNearestBoundary(matches, id);\n      var error = result.error; // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n      errors = errors || {}; // Prefer higher error values if lower errors bubble to the same boundary\n\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      } // Clear our any prior loaderData for the throwing route\n\n      loaderData[id] = undefined; // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      } // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n\n      if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  }); // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n  return {\n    loaderData: loaderData,\n    errors: errors,\n    statusCode: statusCode || 200,\n    loaderHeaders: loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  var _processRouteLoaderDa = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds),\n    loaderData = _processRouteLoaderDa.loaderData,\n    errors = _processRouteLoaderDa.errors; // Process results from our revalidating fetchers\n\n  for (var index = 0; index < revalidatingFetchers.length; index++) {\n    var _revalidatingFetchers = revalidatingFetchers[index],\n      key = _revalidatingFetchers.key,\n      match = _revalidatingFetchers.match;\n    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, \"Did not find corresponding fetcher result\");\n    var result = fetcherResults[index]; // Process fetcher non-redirect errors\n\n    if (isErrorResult(result)) {\n      var boundaryMatch = findNearestBoundary(state.matches, match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, _defineProperty({}, boundaryMatch.route.id, result.error));\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      var doneFetcher = {\n        state: \"idle\",\n        data: result.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  return {\n    loaderData: loaderData,\n    errors: errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  var mergedLoaderData = _extends({}, newLoaderData);\n  var _iterator7 = _createForOfIteratorHelper(matches),\n    _step7;\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var match = _step7.value;\n      var id = match.route.id;\n      if (newLoaderData.hasOwnProperty(id)) {\n        if (newLoaderData[id] !== undefined) {\n          mergedLoaderData[id] = newLoaderData[id];\n        }\n      } else if (loaderData[id] !== undefined) {\n        mergedLoaderData[id] = loaderData[id];\n      }\n      if (errors && errors.hasOwnProperty(id)) {\n        // Don't keep any loader data below the boundary\n        break;\n      }\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n  return mergedLoaderData;\n} // Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\n\nfunction findNearestBoundary(matches, routeId) {\n  var eligibleMatches = routeId ? matches.slice(0, matches.findIndex(function (m) {\n    return m.route.id === routeId;\n  }) + 1) : _toConsumableArray(matches);\n  return eligibleMatches.reverse().find(function (m) {\n    return m.route.hasErrorBoundary === true;\n  }) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  var route = routes.find(function (r) {\n    return r.index || !r.path || r.path === \"/\";\n  }) || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route: route\n    }],\n    route: route\n  };\n}\nfunction getInternalRouterError(status, _temp4) {\n  var _ref11 = _temp4 === void 0 ? {} : _temp4,\n    pathname = _ref11.pathname,\n    routeId = _ref11.routeId,\n    method = _ref11.method,\n    type = _ref11.type;\n  var statusText = \"Unknown Server Error\";\n  var errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponse(status || 500, statusText, new Error(errorMessage), true);\n} // Find any returned redirect errors, starting from the lowest match\n\nfunction findRedirect(results) {\n  for (var i = results.length - 1; i >= 0; i--) {\n    var result = results[i];\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  var parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash !== b.hash;\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  var status = result.status;\n  var location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isQueryRouteResponse(obj) {\n  return obj && isResponse(obj.response) && (obj.type === ResultType.data || ResultType.error);\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method);\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method);\n}\nfunction resolveDeferredResults(_x67, _x68, _x69, _x70, _x71, _x72) {\n  return _resolveDeferredResults.apply(this, arguments);\n}\nfunction _resolveDeferredResults() {\n  _resolveDeferredResults = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(currentMatches, matchesToLoad, results, signal, isFetcher, currentLoaderData) {\n    var _loop, index;\n    return _regeneratorRuntime().wrap(function _callee16$(_context18) {\n      while (1) switch (_context18.prev = _context18.next) {\n        case 0:\n          _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop(index) {\n            var result, match, currentMatch, isRevalidatingLoader;\n            return _regeneratorRuntime().wrap(function _loop$(_context17) {\n              while (1) switch (_context17.prev = _context17.next) {\n                case 0:\n                  result = results[index];\n                  match = matchesToLoad[index];\n                  currentMatch = currentMatches.find(function (m) {\n                    return m.route.id === match.route.id;\n                  });\n                  isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n                  if (!(isDeferredResult(result) && (isFetcher || isRevalidatingLoader))) {\n                    _context17.next = 7;\n                    break;\n                  }\n                  _context17.next = 7;\n                  return resolveDeferredData(result, signal, isFetcher).then(function (result) {\n                    if (result) {\n                      results[index] = result || results[index];\n                    }\n                  });\n                case 7:\n                case \"end\":\n                  return _context17.stop();\n              }\n            }, _loop);\n          });\n          index = 0;\n        case 2:\n          if (!(index < results.length)) {\n            _context18.next = 7;\n            break;\n          }\n          return _context18.delegateYield(_loop(index), \"t0\", 4);\n        case 4:\n          index++;\n          _context18.next = 2;\n          break;\n        case 7:\n        case \"end\":\n          return _context18.stop();\n      }\n    }, _callee16);\n  }));\n  return _resolveDeferredResults.apply(this, arguments);\n}\nfunction resolveDeferredData(_x73, _x74, _x75) {\n  return _resolveDeferredData.apply(this, arguments);\n}\nfunction _resolveDeferredData() {\n  _resolveDeferredData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(result, signal, unwrap) {\n    var aborted;\n    return _regeneratorRuntime().wrap(function _callee17$(_context19) {\n      while (1) switch (_context19.prev = _context19.next) {\n        case 0:\n          if (unwrap === void 0) {\n            unwrap = false;\n          }\n          _context19.next = 3;\n          return result.deferredData.resolveData(signal);\n        case 3:\n          aborted = _context19.sent;\n          if (!aborted) {\n            _context19.next = 6;\n            break;\n          }\n          return _context19.abrupt(\"return\");\n        case 6:\n          if (!unwrap) {\n            _context19.next = 14;\n            break;\n          }\n          _context19.prev = 7;\n          return _context19.abrupt(\"return\", {\n            type: ResultType.data,\n            data: result.deferredData.unwrappedData\n          });\n        case 11:\n          _context19.prev = 11;\n          _context19.t0 = _context19[\"catch\"](7);\n          return _context19.abrupt(\"return\", {\n            type: ResultType.error,\n            error: _context19.t0\n          });\n        case 14:\n          return _context19.abrupt(\"return\", {\n            type: ResultType.data,\n            data: result.deferredData.data\n          });\n        case 15:\n        case \"end\":\n          return _context19.stop();\n      }\n    }, _callee17, null, [[7, 11]]);\n  }));\n  return _resolveDeferredData.apply(this, arguments);\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(function (v) {\n    return v === \"\";\n  });\n} // Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\n\nfunction createUseMatchesMatch(match, loaderData) {\n  var route = match.route,\n    pathname = match.pathname,\n    params = match.params;\n  return {\n    id: route.id,\n    pathname: pathname,\n    params: params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction getTargetMatch(matches, location) {\n  var search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  } // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n\n  var pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n} //#endregion\n\nexport { AbortedDeferredError, Action, ErrorResponse, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, getPathContributingMatches as UNSAFE_getPathContributingMatches, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, defer, generatePath, getStaticContextFromError, getToPathname, invariant, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, resolvePath, resolveTo, stripBasename, warning };","map":{"version":3,"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","Action","PopStateEventType","createMemoryHistory","options","initialEntries","initialIndex","v5Compat","entries","map","entry","index","createMemoryLocation","state","undefined","clampIndex","action","Pop","listener","n","Math","min","max","getCurrentLocation","to","location","createLocation","pathname","warning$1","charAt","JSON","stringify","createHref","createPath","history","createURL","URL","encodeLocation","path","parsePath","search","hash","push","Push","nextLocation","splice","delta","replace","Replace","go","nextIndex","listen","fn","createBrowserHistory","createBrowserLocation","window","globalHistory","usr","createBrowserHref","getUrlBasedHistory","createHashHistory","createHashLocation","substr","createHashHref","base","document","querySelector","href","getAttribute","url","hashIndex","indexOf","slice","validateHashLocation","invariant","value","message","Error","cond","console","warn","e","createKey","random","toString","getHistoryState","idx","current","_ref","parsedPath","searchIndex","getLocation","validateLocation","defaultView","getIndex","replaceState","handlePop","historyState","pushState","error","origin","addEventListener","removeEventListener","ResultType","isIndexRoute","route","convertRoutesToDataRoutes","routes","parentPath","allIds","Set","treePath","id","join","children","has","add","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","parentsMeta","flattenRoute","relativePath","meta","caseSensitive","childrenIndex","startsWith","joinPaths","routesMeta","concat","score","computeScore","forEach","_route$path","includes","explodeOptionalSegments","exploded","segments","split","first","rest","isOptional","endsWith","required","restExploded","result","subpath","sort","a","b","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","some","filter","reduce","segment","test","siblings","every","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","params","pathnameBase","normalizePathname","generatePath","originalPath","warning","_","optional","param","prefix","__","str","star","pattern","compilePath","matcher","paramNames","captureGroups","memo","paramName","splatValue","safelyDecodeURIComponent","regexpSource","RegExp","decodeURI","decodeURIComponent","toLowerCase","startIndex","nextChar","resolvePath","fromPathname","toPathname","resolvePathname","normalizeSearch","normalizeHash","relativeSegments","pop","getInvalidPathError","char","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","from","routePathnameIndex","toSegments","shift","hasExplicitTrailingSlash","hasCurrentTrailingSlash","getToPathname","paths","json","data","init","responseInit","status","headers","Headers","set","Response","AbortedDeferredError","DeferredData","pendingKeysSet","subscribers","deferredKeys","Array","isArray","reject","abortPromise","Promise","r","controller","AbortController","onAbort","unlistenAbortSignal","signal","acc","trackPromise","done","promise","race","then","onSettle","catch","defineProperty","get","aborted","delete","emit","settledKey","subscriber","abort","v","k","cancel","resolve","subscribe","size","_ref2","unwrapTrackedPromise","isTrackedPromise","_tracked","_error","_data","defer","redirect","ErrorResponse","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","IDLE_FETCHER","IDLE_BLOCKER","proceed","reset","isBrowser","createElement","isServer","createRouter","dataRoutes","unlistenHistory","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialErrors","getInternalRouterError","getShortCircuitMatches","initialized","m","loader","router","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","loaderData","actionData","errors","fetchers","Map","blockers","pendingAction","pendingPreventScrollReset","pendingNavigationController","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeDeferreds","activeBlocker","blockerFunctions","ignoreNextHistoryUpdate","initialize","blockerKey","shouldBlockNavigation","currentLocation","updateBlocker","deleteBlocker","updateState","startNavigation","dispose","clear","deleteFetcher","newState","completeNavigation","_location$state","_location$state2","isActionReload","isMutationMethod","_isRedirect","keys","mergeLoaderData","getSavedScrollPosition","navigate","opts","normalizeNavigateOptions","submission","userReplace","pendingError","revalidate","interruptActiveLoads","startUninterruptedRevalidation","overrideNavigation","saveScrollPosition","loadingNavigation","notFoundMatches","cancelActiveDeferreds","isHashChangeOnly","request","createClientSideRequest","findNearestBoundary","handleAction","actionOutput","shortCircuited","pendingActionData","pendingActionError","Request","handleLoaders","actionMatch","getTargetMatch","type","method","routeId","callLoaderOrAction","isRedirectResult","startRedirectNavigation","isErrorResult","boundaryMatch","isDeferredResult","activeSubmission","getMatchesToLoad","matchesToLoad","revalidatingFetchers","rf","fetcher","revalidatingFetcher","callLoadersAndMaybeResolveData","results","loaderResults","fetcherResults","findRedirect","processLoaderData","deferredData","markFetchRedirectsDone","didAbortFetchLoads","abortStaleFetchLoads","getFetcher","fetch","abortFetcher","setFetcherError","handleFetcherAction","handleFetcherLoader","requestMatches","existingFetcher","abortController","fetchRequest","actionResult","loadingFetcher","isFetchActionRedirect","revalidationRequest","loadId","loadFetcher","staleKey","doneFetcher","resolveDeferredData","_temp","redirectLocation","_isFetchActionRedirect","_window","newOrigin","redirectHistoryAction","currentMatches","fetchersToLoad","all","f","resolveDeferredResults","markFetchersDone","doneKeys","landedId","yeetedKeys","getBlocker","blocker","newBlocker","blockerFunction","predicate","cancelledRouteIds","dfd","enableScrollRestoration","positions","getPosition","getKey","y","userMatches","createUseMatchesMatch","_internalFetchControllers","_internalActiveDeferreds","UNSAFE_DEFERRED_SYMBOL","Symbol","createStaticHandler","query","_temp2","requestContext","isValidMethod","methodNotAllowedMatches","statusCode","loaderHeaders","actionHeaders","queryImpl","isResponse","queryRoute","_temp3","find","values","_result$activeDeferre","routeMatch","submit","loadRouteData","isQueryRouteResponse","isRedirectResponse","response","isRouteRequest","Location","context","loaderRequest","getLoaderMatchesUntilBoundary","processRouteLoaderData","executedLoaders","fromEntries","getStaticContextFromError","newContext","_deepestRenderedBoundaryId","isSubmissionNavigation","isFetcher","stripHashFromPath","searchParams","convertFormDataToSearchParams","hasNakedIndexQuery","append","boundaryId","boundaryMatches","findIndex","currentUrl","nextUrl","defaultShouldRevalidate","navigationMatches","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","currentParams","nextParams","isNewRouteInstance","shouldRevalidate","currentLoaderData","currentMatch","isNew","isMissingData","currentPath","loaderMatch","arg","routeChoice","isStaticRequest","onReject","handler","resultType","isAbsolute","activeMatches","resolvedLocation","protocol","contentType","text","deferred","toUpperCase","body","URLSearchParams","File","name","foundError","newLoaderData","mergedLoaderData","eligibleMatches","reverse","hasErrorBoundary","_temp4","errorMessage","obj","isRevalidatingLoader","unwrap","resolveData","unwrappedData","getAll","handle","pathMatches","UNSAFE_DeferredData","UNSAFE_convertRoutesToDataRoutes","UNSAFE_getPathContributingMatches"],"sources":["D:/Andrew/Documents/GitHub/SpotifyApp/client/node_modules/@remix-run/router/dist/router.js"],"sourcesContent":["/**\n * @remix-run/router v1.3.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\n\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\n\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n\n  function getCurrentLocation() {\n    return entries[index];\n  }\n\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning$1(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history = {\n    get index() {\n      return index;\n    },\n\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return getCurrentLocation();\n    },\n\n    createHref,\n\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\n\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    }, // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\n\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    }, // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location, to) {\n    warning$1(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nfunction warning$1(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\n\n\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\n\n\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\n\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\n\nfunction parsePath(path) {\n  let parsedPath = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex(); // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location); // try...catch because iOS limits us to 100 pushState calls :/\n\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n\n  let history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n\n    createHref(to) {\n      return createHref(window, to);\n    },\n\n    createURL,\n\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n\n    push,\n    replace,\n\n    go(n) {\n      return globalHistory.go(n);\n    }\n\n  };\n  return history;\n} //#endregion\n\nvar ResultType;\n\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\n\nfunction isIndexRoute(route) {\n  return route.index === true;\n} // Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\n\n\nfunction convertRoutesToDataRoutes(routes, parentPath, allIds) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n\n  if (allIds === void 0) {\n    allIds = new Set();\n  }\n\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!allIds.has(id), \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    allIds.add(id);\n\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, {\n        id\n      });\n\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, {\n        id,\n        children: route.children ? convertRoutesToDataRoutes(route.children, treePath, allIds) : undefined\n      });\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\n\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    safelyDecodeURI(pathname));\n  }\n\n  return matches;\n}\n\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n\n    if (route.children && route.children.length > 0) {\n      invariant( // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    } // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n\n\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n\n  routes.forEach((route, index) => {\n    var _route$path;\n\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\n\n\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments; // Optional path segments are denoted by a trailing `?`\n\n  let isOptional = first.endsWith(\"?\"); // Compute the corresponding required segment: `foo?` -> `foo`\n\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = []; // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\"))); // Then if this is an optional value, add all child versions without\n\n  if (isOptional) {\n    result.push(...restExploded);\n  } // for absolute paths, ensure `/` instead of empty segment\n\n\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\n\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\n\nconst isSplat = s => s === \"*\";\n\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\n\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\n\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\n\n\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  let path = originalPath;\n\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n\n  return path.replace(/^:(\\w+)(\\??)/g, (_, key, optional) => {\n    let param = params[key];\n\n    if (optional === \"?\") {\n      return param == null ? \"\" : param;\n    }\n\n    if (param == null) {\n      invariant(false, \"Missing \\\":\" + key + \"\\\" param\");\n    }\n\n    return param;\n  }).replace(/\\/:(\\w+)(\\??)/g, (_, key, optional) => {\n    let param = params[key];\n\n    if (optional === \"?\") {\n      return param == null ? \"\" : \"/\" + param;\n    }\n\n    if (param == null) {\n      invariant(false, \"Missing \\\":\" + key + \"\\\" param\");\n    }\n\n    return \"/\" + param;\n  }) // Remove any optional markers from optional static segments\n  .replace(/\\?/g, \"\").replace(/(\\/?)\\*/, (_, prefix, __, str) => {\n    const star = \"*\";\n\n    if (params[star] == null) {\n      // If no splat was provided, trim the trailing slash _unless_ it's\n      // the entire path\n      return str === \"/*\" ? \"/\" : \"\";\n    } // Apply the splat\n\n\n    return \"\" + prefix + params[star];\n  });\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\n\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n\n  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = paramNames.reduce((memo, paramName, index) => {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\n\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n\n  if (end === void 0) {\n    end = true;\n  }\n\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let paramNames = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:(\\w+)/g, (_, paramName) => {\n    paramNames.push(paramName);\n    return \"/([^\\\\/]+)\";\n  });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\n\n\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  } // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n\n\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * @private\n */\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging @remix-run/router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\n\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\n\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\n\n\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n/**\n * @private\n */\n\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n\n  let to;\n\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from; // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\"); // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    } // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original \"to\" had one\n\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\"); // Or if this was a link to the current path which has a trailing slash\n\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n/**\n * @private\n */\n\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\n\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\n\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\n\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\n\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\n\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\"); // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref) => {\n      let [key, value] = _ref;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key); // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, null, data), error => this.onSettle(promise, key, error)); // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    if (error) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal) {\n    let aborted = false;\n\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n\n}\n\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\n\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n\n  return value._data;\n}\n\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\n\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n\n  let responseInit = init;\n\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\n\nclass ErrorResponse {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\n\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst isServer = !isBrowser; //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\n\nfunction createRouter(init) {\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let dataRoutes = convertRoutesToDataRoutes(init.routes); // Cleanup function for history\n\n  let unlistenHistory = null; // Externally-provided functions to call on all state changes\n\n  let subscribers = new Set(); // Externally-provided object to hold scroll restoration locations during routing\n\n  let savedScrollPositions = null; // Externally-provided function to get scroll restoration keys\n\n  let getScrollRestorationKey = null; // Externally-provided function to get current scroll position\n\n  let getScrollPosition = null; // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, init.basename);\n  let initialErrors = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n\n  let initialized = !initialMatches.some(m => m.route.loader) || init.hydrationData != null;\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  }; // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n\n  let pendingAction = Action.Pop; // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n\n  let pendingPreventScrollReset = false; // AbortController for the active navigation\n\n  let pendingNavigationController; // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n\n  let isUninterruptedRevalidation = false; // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidate()\n  //  - X-Remix-Revalidate (from redirect)\n\n  let isRevalidationRequired = false; // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n\n  let cancelledDeferredRoutes = []; // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n\n  let cancelledFetcherLoads = []; // AbortControllers for any in-flight fetchers\n\n  let fetchControllers = new Map(); // Track loads based on the order in which they started\n\n  let incrementingLoadId = 0; // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n\n  let pendingNavigationLoadId = -1; // Fetchers that triggered data reloads as a result of their actions\n\n  let fetchReloadIds = new Map(); // Fetchers that triggered redirect navigations from their actions\n\n  let fetchRedirectIds = new Set(); // Most recent href/match for fetcher.load calls for fetchers\n\n  let fetchLoadMatches = new Map(); // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n\n  let activeDeferreds = new Map(); // We ony support a single active blocker at the moment since we don't have\n  // any compelling use cases for multi-blocker yet\n\n  let activeBlocker = null; // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n\n  let blockerFunctions = new Map(); // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n\n  let ignoreNextHistoryUpdate = false; // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (ignoreNextHistoryUpdate) {\n        ignoreNextHistoryUpdate = false;\n        return;\n      }\n\n      warning(activeBlocker != null && delta === null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        ignoreNextHistoryUpdate = true;\n        init.history.go(delta * -1); // Put the blocker into a blocked state\n\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            }); // Re-do the same POP navigation we just blocked\n\n            init.history.go(delta);\n          },\n\n          reset() {\n            deleteBlocker(blockerKey);\n            updateState({\n              blockers: new Map(router.state.blockers)\n            });\n          }\n\n        });\n        return;\n      }\n\n      return startNavigation(historyAction, location);\n    }); // Kick off initial data load if needed.  Use Pop to avoid modifying history\n\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location);\n    }\n\n    return router;\n  } // Clean up a router and it's side effects\n\n\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  } // Subscribe to state updates for the router\n\n\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  } // Update our state and notify the calling context of the change\n\n\n  function updateState(newState) {\n    state = _extends({}, state, newState);\n    subscribers.forEach(subscriber => subscriber(state));\n  } // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n\n\n  function completeNavigation(location, newState) {\n    var _location$state, _location$state2;\n\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    } // Always preserve any existing loaderData from re-used routes\n\n\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData; // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n\n    for (let [key] of blockerFunctions) {\n      deleteBlocker(key);\n    } // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n\n\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers: new Map(state.blockers)\n    }));\n\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    } // Reset stateful navigation vars\n\n\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  } // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n\n\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(to, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state); // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          }); // Send the same navigation through\n\n          navigate(to, opts);\n        },\n\n        reset() {\n          deleteBlocker(blockerKey);\n          updateState({\n            blockers: new Map(state.blockers)\n          });\n        }\n\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace\n    });\n  } // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n\n\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    }); // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n\n    if (state.navigation.state === \"submitting\") {\n      return;\n    } // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n\n\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    } // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n\n\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  } // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n\n\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true; // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(dataRoutes, location, init.basename); // Short circuit with a 404 on the root error boundary if we match nothing\n\n    if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes); // Cancel all pending deferred on 404s since we don't keep any routes\n\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      });\n      return;\n    } // Short circuit if it's only a hash change and not a mutation submission\n    // For example, on /page#hash and submit a <Form method=\"post\"> which will\n    // default to a navigation to /page\n\n\n    if (isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      });\n      return;\n    } // Create a controller/Request for this navigation\n\n\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionData;\n    let pendingError;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError\n      };\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(request, location, opts.submission, matches, {\n        replace: opts.replace\n      });\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n\n      let navigation = _extends({\n        state: \"loading\",\n        location\n      }, opts.submission);\n\n      loadingNavigation = navigation; // Create a GET request for the loaders\n\n      request = new Request(request.url, {\n        signal: request.signal\n      });\n    } // Call loaders\n\n\n    let {\n      shortCircuited,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.replace, pendingActionData, pendingError);\n\n    if (shortCircuited) {\n      return;\n    } // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n\n\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches\n    }, pendingActionData ? {\n      actionData: pendingActionData\n    } : {}, {\n      loaderData,\n      errors\n    }));\n  } // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n\n\n  async function handleAction(request, location, submission, matches, opts) {\n    interruptActiveLoads(); // Put us in a submitting state\n\n    let navigation = _extends({\n      state: \"submitting\",\n      location\n    }, submission);\n\n    updateState({\n      navigation\n    }); // Call our action and get the result\n\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, router.basename);\n\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace;\n\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace = result.location === state.location.pathname + state.location.search;\n      }\n\n      await startRedirectNavigation(state, result, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id); // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: {\n          [boundaryMatch.route.id]: result.error\n        }\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n\n    return {\n      pendingActionData: {\n        [actionMatch.route.id]: result.data\n      }\n    };\n  } // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n\n\n  async function handleLoaders(request, location, matches, overrideNavigation, submission, replace, pendingActionData, pendingError) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation;\n\n    if (!loadingNavigation) {\n      let navigation = _extends({\n        state: \"loading\",\n        location,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined\n      }, submission);\n\n      loadingNavigation = navigation;\n    } // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n\n\n    let activeSubmission = submission ? submission : loadingNavigation.formMethod && loadingNavigation.formAction && loadingNavigation.formData && loadingNavigation.formEncType ? {\n      formMethod: loadingNavigation.formMethod,\n      formAction: loadingNavigation.formAction,\n      formData: loadingNavigation.formData,\n      formEncType: loadingNavigation.formEncType\n    } : undefined;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, pendingActionData, pendingError, fetchLoadMatches); // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId)); // Short circuit if we have no loaders to run\n\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null\n      }, pendingActionData ? {\n        actionData: pendingActionData\n      } : {}));\n      return {\n        shortCircuited: true\n      };\n    } // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n\n\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach(rf => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = {\n          state: \"loading\",\n          data: fetcher && fetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true\n        };\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState(_extends({\n        navigation: loadingNavigation\n      }, actionData ? Object.keys(actionData).length === 0 ? {\n        actionData: null\n      } : {\n        actionData\n      } : {}, revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n    }\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach(rf => fetchControllers.set(rf.key, pendingNavigationController));\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);\n\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    } // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n\n\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key)); // If any loaders returned a redirect Response, start a new REPLACE navigation\n\n    let redirect = findRedirect(results);\n\n    if (redirect) {\n      await startRedirectNavigation(state, redirect, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    } // Process and commit output from loaders\n\n\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds); // Wire up subscribers to update loaderData as promises settle\n\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    return _extends({\n      loaderData,\n      errors\n    }, didAbortFetchLoads || revalidatingFetchers.length > 0 ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n\n  function getFetcher(key) {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  } // Trigger a fetcher load/submit for the given fetcher key\n\n\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let matches = matchRoutes(dataRoutes, href, init.basename);\n\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: href\n      }));\n      return;\n    }\n\n    let {\n      path,\n      submission\n    } = normalizeNavigateOptions(href, opts, true);\n    let match = getTargetMatch(matches, path);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    } // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n\n\n    fetchLoadMatches.set(key, {\n      routeId,\n      path,\n      match,\n      matches\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  } // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n\n\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    } // Put this fetcher into it's submitting state\n\n\n    let existingFetcher = state.fetchers.get(key);\n\n    let fetcher = _extends({\n      state: \"submitting\"\n    }, submission, {\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true\n    });\n\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }); // Call the action for the fetcher\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    fetchControllers.set(key, abortController);\n    let actionResult = await callLoaderOrAction(\"action\", fetchRequest, match, requestMatches, router.basename);\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n\n      let loadingFetcher = _extends({\n        state: \"loading\"\n      }, submission, {\n        data: undefined,\n        \" _hasFetcherDoneAnything \": true\n      });\n\n      state.fetchers.set(key, loadingFetcher);\n      updateState({\n        fetchers: new Map(state.fetchers)\n      });\n      return startRedirectNavigation(state, actionResult, {\n        isFetchActionRedirect: true\n      });\n    } // Process any non-redirect errors thrown\n\n\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    } // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n\n\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(dataRoutes, state.navigation.location, init.basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = _extends({\n      state: \"loading\",\n      data: actionResult.data\n    }, submission, {\n      \" _hasFetcherDoneAnything \": true\n    });\n\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, {\n      [match.route.id]: actionResult.data\n    }, undefined, // No need to send through errors since we short circuit above\n    fetchLoadMatches); // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = {\n        state: \"loading\",\n        data: existingFetcher && existingFetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true\n      };\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      fetchControllers.set(staleKey, abortController);\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(results);\n\n    if (redirect) {\n      return startRedirectNavigation(state, redirect);\n    } // Process and commit output from loaders\n\n\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    let doneFetcher = {\n      state: \"idle\",\n      data: actionResult.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true\n    };\n    state.fetchers.set(key, doneFetcher);\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId); // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState(_extends({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors)\n      }, didAbortFetchLoads ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      isRevalidationRequired = false;\n    }\n  } // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n\n\n  async function handleFetcherLoader(key, routeId, path, match, matches, submission) {\n    let existingFetcher = state.fetchers.get(key); // Put this fetcher into it's loading state\n\n    let loadingFetcher = _extends({\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined\n    }, submission, {\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true\n    });\n\n    state.fetchers.set(key, loadingFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }); // Call the loader for this fetcher route match\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    fetchControllers.set(key, abortController);\n    let result = await callLoaderOrAction(\"loader\", fetchRequest, match, matches, router.basename); // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    } // We can delete this so long as we weren't aborted by ou our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n\n\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    } // If the loader threw a redirect Response, start a new REPLACE navigation\n\n\n    if (isRedirectResult(result)) {\n      await startRedirectNavigation(state, result);\n      return;\n    } // Process any non-redirect errors thrown\n\n\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key); // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error\n        }\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\"); // Put the fetcher back into an idle state\n\n    let doneFetcher = {\n      state: \"idle\",\n      data: result.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true\n    };\n    state.fetchers.set(key, doneFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n\n\n  async function startRedirectNavigation(state, redirect, _temp) {\n    var _window;\n\n    let {\n      submission,\n      replace,\n      isFetchActionRedirect\n    } = _temp === void 0 ? {} : _temp;\n\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(state.location, redirect.location, // TODO: This can be removed once we get rid of useTransition in Remix v2\n    _extends({\n      _isRedirect: true\n    }, isFetchActionRedirect ? {\n      _isFetchActionRedirect: true\n    } : {}));\n    invariant(redirectLocation, \"Expected a location on the redirect navigation\"); // Check if this an external redirect that goes to a new origin\n\n    if (isBrowser && typeof ((_window = window) == null ? void 0 : _window.location) !== \"undefined\") {\n      let newOrigin = init.history.createURL(redirect.location).origin;\n\n      if (window.location.origin !== newOrigin) {\n        if (replace) {\n          window.location.replace(redirect.location);\n        } else {\n          window.location.assign(redirect.location);\n        }\n\n        return;\n      }\n    } // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n\n\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push; // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n\n    let {\n      formMethod,\n      formAction,\n      formEncType,\n      formData\n    } = state.navigation;\n\n    if (!submission && formMethod && formAction && formData && formEncType) {\n      submission = {\n        formMethod,\n        formAction,\n        formEncType,\n        formData\n      };\n    } // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n\n\n    if (redirectPreserveMethodStatusCodes.has(redirect.status) && submission && isMutationMethod(submission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, submission, {\n          formAction: redirect.location\n        }),\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else {\n      // Otherwise, we kick off a new loading navigation, preserving the\n      // submission info for the duration of this navigation\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: submission ? submission.formMethod : undefined,\n          formAction: submission ? submission.formAction : undefined,\n          formEncType: submission ? submission.formEncType : undefined,\n          formData: submission ? submission.formData : undefined\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, router.basename)), ...fetchersToLoad.map(f => callLoaderOrAction(\"loader\", createClientSideRequest(init.history, f.path, request.signal), f.match, f.matches, router.basename))]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, request.signal, false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(f => f.match), fetcherResults, request.signal, true)]);\n    return {\n      results,\n      loaderResults,\n      fetcherResults\n    };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true; // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds()); // Abort in-flight fetcher loads\n\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key, routeId, error) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    });\n  }\n\n  function deleteFetcher(key) {\n    if (fetchControllers.has(key)) abortFetcher(key);\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = {\n        state: \"idle\",\n        data: fetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n      }\n    }\n\n    markFetchersDone(doneKeys);\n  }\n\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n\n      if (activeBlocker == null) {\n        // This is now the active blocker\n        activeBlocker = key;\n      } else if (key !== activeBlocker) {\n        warning(false, \"A router only supports one blocker at a time\");\n      }\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n\n    if (activeBlocker === key) {\n      activeBlocker = null;\n    }\n  } // Utility function to update blockers, ensuring valid state transitions\n\n\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER; // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    state.blockers.set(key, newBlocker);\n    updateState({\n      blockers: new Map(state.blockers)\n    });\n  }\n\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n\n    if (activeBlocker == null) {\n      return;\n    } // We only allow a single blocker at the moment.  This will need to be\n    // updated if we enhance to support multiple blockers in the future\n\n\n    let blockerFunction = blockerFunctions.get(activeBlocker);\n    invariant(blockerFunction, \"Could not find a function for the active blocker\");\n    let blocker = state.blockers.get(activeBlocker);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    } // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n\n\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return activeBlocker;\n    }\n  }\n\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  } // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n\n\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n\n    getScrollRestorationKey = getKey || (location => location.key); // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n\n\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map(m => createUseMatchesMatch(m, state.loaderData));\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map(m => createUseMatchesMatch(m, state.loaderData));\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      let y = savedScrollPositions[key];\n\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n\n    return null;\n  }\n\n  router = {\n    get basename() {\n      return init.basename;\n    },\n\n    get state() {\n      return state;\n    },\n\n    get routes() {\n      return dataRoutes;\n    },\n\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds\n  };\n  return router;\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let dataRoutes = convertRoutesToDataRoutes(routes);\n  let basename = (opts ? opts.basename : null) || \"/\";\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n\n  async function query(request, _temp2) {\n    let {\n      requestContext\n    } = _temp2 === void 0 ? {} : _temp2;\n    let url = new URL(request.url);\n    let method = request.method.toLowerCase();\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename); // SSR supports HEAD requests while SPA doesn't\n\n    if (!isValidMethod(method) && method !== \"head\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n\n    if (isResponse(result)) {\n      return result;\n    } // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n\n\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n\n\n  async function queryRoute(request, _temp3) {\n    let {\n      routeId,\n      requestContext\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method.toLowerCase();\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename); // SSR supports HEAD requests while SPA doesn't\n\n    if (!isValidMethod(method) && method !== \"head\" && method !== \"options\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext, match);\n\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    } // Pick off the right state value to return\n\n\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      var _result$activeDeferre;\n\n      let data = Object.values(result.loaderData)[0];\n\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(request, location, matches, requestContext, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);\n        return result;\n      }\n\n      let result = await loadRouteData(request, matches, requestContext, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {\n          throw e.response;\n        }\n\n        return e.response;\n      } // Redirects are always returned since they don't propagate to catch\n      // boundaries\n\n\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n\n      throw e;\n    }\n  }\n\n  async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {\n    let result;\n\n    if (!actionMatch.route.action) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n\n      if (isRouteRequest) {\n        throw error;\n      }\n\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, basename, true, isRouteRequest, requestContext);\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(method + \"() call aborted\");\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location\n        }\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n\n      if (isRouteRequest) {\n        throw error;\n      }\n\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(request, matches, requestContext, undefined, {\n        [boundaryMatch.route.id]: result.error\n      }); // action status codes take precedence over loader status codes\n\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    } // Create a GET request for the loaders\n\n\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n    return _extends({}, context, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      actionHeaders: _extends({}, result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {})\n    });\n  }\n\n  async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {\n    let isRouteRequest = routeMatch != null; // Short circuit if we have no loaders to run (queryRoute())\n\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n\n    let requestMatches = routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]);\n    let matchesToLoad = requestMatches.filter(m => m.route.loader); // Short circuit if we have no loaders to run (query())\n\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, basename, true, isRouteRequest, requestContext))]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(method + \"() call aborted\");\n    } // Process and commit output from loaders\n\n\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError, activeDeferreds); // Add a null for any non-loader matches for proper revalidation on the client\n\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\n\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n\n  return newContext;\n}\n\nfunction isSubmissionNavigation(opts) {\n  return opts != null && \"formData\" in opts;\n} // Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\n\n\nfunction normalizeNavigateOptions(to, opts, isFetcher) {\n  if (isFetcher === void 0) {\n    isFetcher = false;\n  }\n\n  let path = typeof to === \"string\" ? to : createPath(to); // Return location verbatim on non-submission navigations\n\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  } // Create a Submission on non-GET navigations\n\n\n  let submission;\n\n  if (opts.formData) {\n    submission = {\n      formMethod: opts.formMethod || \"get\",\n      formAction: stripHashFromPath(path),\n      formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n      formData: opts.formData\n    };\n\n    if (isMutationMethod(submission.formMethod)) {\n      return {\n        path,\n        submission\n      };\n    }\n  } // Flatten submission onto URLSearchParams for GET submissions\n\n\n  let parsedPath = parsePath(path);\n  let searchParams = convertFormDataToSearchParams(opts.formData); // Since fetcher GET submissions only run a single loader (as opposed to\n  // navigation GET submissions which run all loaders), we need to preserve\n  // any incoming ?index params\n\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n} // Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\n\n\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n\n  if (boundaryId) {\n    let index = matches.findIndex(m => m.route.id === boundaryId);\n\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(history, state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, pendingActionData, pendingError, fetchLoadMatches) {\n  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  let defaultShouldRevalidate = // Forced revalidation due to submission, useRevalidate, or X-Remix-Revalidate\n  isRevalidationRequired || // Clicked the same link, resubmitted a GET form\n  currentUrl.toString() === nextUrl.toString() || // Search params affect all loaders\n  currentUrl.search !== nextUrl.search; // Pick navigation matches that are net-new or qualify for revalidation\n\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.loader == null) {\n      return false;\n    } // Always call the loader on new route instances and pending defer cancellations\n\n\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    } // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n\n\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      defaultShouldRevalidate: defaultShouldRevalidate || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  }); // Pick fetcher.loads that need to be revalidated\n\n  let revalidatingFetchers = [];\n  fetchLoadMatches && fetchLoadMatches.forEach((f, key) => {\n    if (!matches.some(m => m.route.id === f.routeId)) {\n      // This fetcher is not going to be present in the subsequent render so\n      // there's no need to revalidate it\n      return;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // This fetcher was cancelled from a prior action submission - force reload\n      revalidatingFetchers.push(_extends({\n        key\n      }, f));\n    } else {\n      // Revalidating fetchers are decoupled from the route matches since they\n      // hit a static href, so they _always_ check shouldRevalidate and the\n      // default is strictly if a revalidation is explicitly required (action\n      // submissions, useRevalidator, X-Remix-Revalidate).\n      let shouldRevalidate = shouldRevalidateLoader(f.match, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        defaultShouldRevalidate\n      }));\n\n      if (shouldRevalidate) {\n        revalidatingFetchers.push(_extends({\n          key\n        }, f));\n      }\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew = // [a] -> [a, b]\n  !currentMatch || // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id; // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n\n  let isMissingData = currentLoaderData[match.route.id] === undefined; // Always load if this is a net-new route or we don't yet have data\n\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (// param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\n\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\nasync function callLoaderOrAction(type, request, match, matches, basename, isStaticRequest, isRouteRequest, requestContext) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n\n  if (isStaticRequest === void 0) {\n    isStaticRequest = false;\n  }\n\n  if (isRouteRequest === void 0) {\n    isRouteRequest = false;\n  }\n\n  let resultType;\n  let result; // Setup a promise we can race against so that abort signals short circuit\n\n  let reject;\n  let abortPromise = new Promise((_, r) => reject = r);\n\n  let onReject = () => reject();\n\n  request.signal.addEventListener(\"abort\", onReject);\n\n  try {\n    let handler = match.route[type];\n    invariant(handler, \"Could not find the \" + type + \" to run on the \\\"\" + match.route.id + \"\\\" route\");\n    result = await Promise.race([handler({\n      request,\n      params: match.params,\n      context: requestContext\n    }), abortPromise]);\n    invariant(result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    request.signal.removeEventListener(\"abort\", onReject);\n  }\n\n  if (isResponse(result)) {\n    let status = result.status; // Process redirects\n\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n      let isAbsolute = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i.test(location); // Support relative routing in internal redirects\n\n      if (!isAbsolute) {\n        let activeMatches = matches.slice(0, matches.indexOf(match) + 1);\n        let routePathnames = getPathContributingMatches(activeMatches).map(match => match.pathnameBase);\n        let resolvedLocation = resolveTo(location, routePathnames, new URL(request.url).pathname);\n        invariant(createPath(resolvedLocation), \"Unable to resolve redirect location: \" + location); // Prepend the basename to the redirect location if we have one\n\n        if (basename) {\n          let path = resolvedLocation.pathname;\n          resolvedLocation.pathname = path === \"/\" ? basename : joinPaths([basename, path]);\n        }\n\n        location = createPath(resolvedLocation);\n      } else if (!isStaticRequest) {\n        // Strip off the protocol+origin for same-origin absolute redirects.\n        // If this is a static reques, we can let it go back to the browser\n        // as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\") ? new URL(currentUrl.protocol + location) : new URL(location);\n\n        if (url.origin === currentUrl.origin) {\n          location = url.pathname + url.search + url.hash;\n        }\n      } // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n\n\n      if (isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null\n      };\n    } // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n\n\n    if (isRouteRequest) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        type: resultType || ResultType.data,\n        response: result\n      };\n    }\n\n    let data;\n    let contentType = result.headers.get(\"Content-Type\"); // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return {\n      type: resultType,\n      error: result\n    };\n  }\n\n  if (result instanceof DeferredData) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result\n    };\n  }\n\n  return {\n    type: ResultType.data,\n    data: result\n  };\n} // Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\n\n\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType,\n      formData\n    } = submission;\n    init.method = formMethod.toUpperCase();\n    init.body = formEncType === \"application/x-www-form-urlencoded\" ? convertFormDataToSearchParams(formData) : formData;\n  } // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, value instanceof File ? value.name : value);\n  }\n\n  return searchParams;\n}\n\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {}; // Process loader results into state.loaderData/state.errors\n\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error; // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {}; // Prefer higher error values if lower errors bubble to the same boundary\n\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      } // Clear our any prior loaderData for the throwing route\n\n\n      loaderData[id] = undefined; // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      } // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n\n\n      if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  }); // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\n\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds); // Process results from our revalidating fetchers\n\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      match\n    } = revalidatingFetchers[index];\n    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, \"Did not find corresponding fetcher result\");\n    let result = fetcherResults[index]; // Process fetcher non-redirect errors\n\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match.route.id);\n\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = {\n        state: \"idle\",\n        data: result.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return {\n    loaderData,\n    errors\n  };\n}\n\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n\n  for (let match of matches) {\n    let id = match.route.id;\n\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n\n  return mergedLoaderData;\n} // Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\n\n\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\n\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\n\nfunction getInternalRouterError(status, _temp4) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type\n  } = _temp4 === void 0 ? {} : _temp4;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n\n  return new ErrorResponse(status || 500, statusText, new Error(errorMessage), true);\n} // Find any returned redirect errors, starting from the lowest match\n\n\nfunction findRedirect(results) {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n}\n\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\n\nfunction isHashChangeOnly(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash !== b.hash;\n}\n\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\n\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\n\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj) {\n  return obj && isResponse(obj.response) && (obj.type === ResultType.data || ResultType.error);\n}\n\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method);\n}\n\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method);\n}\n\nasync function resolveDeferredResults(currentMatches, matchesToLoad, results, signal, isFetcher, currentLoaderData) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, isFetcher).then(result => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n\n  let aborted = await result.deferredData.resolveData(signal);\n\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\n\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n} // Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\n\n\nfunction createUseMatchesMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\n\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  } // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n\n\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n} //#endregion\n\nexport { AbortedDeferredError, Action, ErrorResponse, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, getPathContributingMatches as UNSAFE_getPathContributingMatches, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, defer, generatePath, getStaticContextFromError, getToPathname, invariant, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, resolvePath, resolveTo, stripBasename, warning };\n//# sourceMappingURL=router.js.map\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}